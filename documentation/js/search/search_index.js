var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.191,1,2.96]],["body/controllers/AppController.html",[0,1.939,1,4.818,2,1.557,3,0.164,4,0.164,5,0.11,6,4.651,7,0.336,8,0.013,9,2.618,10,4.651,11,3.868,12,4.203,13,0.815,14,4.583,15,4.651,16,4.324,17,3.021,18,6.641,19,3.378,20,5.332,21,4.818,22,4.098,23,5.332,24,3.601,25,4.651,26,3.021,27,5.332,28,0.164,29,0.225,30,2.137,31,3.261,32,2.309,33,0.01,34,0.01]],["title/modules/AppModule.html",[35,0.976,36,2.96]],["body/modules/AppModule.html",[1,4.195,2,1.441,3,0.106,4,0.106,5,0.071,7,0.336,8,0.013,13,0.524,14,4.422,15,2.992,16,3.781,17,1.943,21,2.488,24,2.316,25,2.992,28,0.106,29,0.145,33,0.008,34,0.008,35,1.512,36,6.047,37,1.374,38,1.428,39,1.546,40,1.546,41,1.428,42,2.607,43,1.546,44,2.992,45,2.992,46,2.992,47,4.713,48,4.713,49,4.713,50,4.713,51,4.713,52,4.713,53,4.713,54,4.713,55,4.422,56,4.713,57,4.422,58,2.225,59,1.546,60,1.546,61,3.429,62,2.718,63,3.429,64,1.847,65,1.001,66,4.306,67,2.992,68,3.429,69,3.429,70,2.316,71,3.429,72,1.762,73,1.231,74,1.762,75,1.393,76,3.429,77,3.429,78,3.429,79,3.429,80,3.429,81,3.429,82,3.429,83,3.429,84,3.429,85,3.429,86,3.429,87,3.429,88,3.429,89,2.703,90,1.147,91,3.429,92,3.429,93,3.429,94,4.936,95,3.429,96,0.906,97,2.703,98,3.429,99,3.429,100,1.276]],["title/injectables/AppService.html",[14,2.585,101,0.771]],["body/injectables/AppService.html",[3,0.182,4,0.182,5,0.122,7,0.245,8,0.013,13,0.904,14,4.485,28,0.182,29,0.25,33,0.011,34,0.011,96,1.564,101,1.338,102,2.125,103,5.165,104,0.688,105,1.999,106,6.846,107,0.872,108,5.92,109,1.671,110,1.292,111,5.92,112,5.92]],["title/controllers/AuthController.html",[0,1.191,113,2.96]],["body/controllers/AuthController.html",[0,0.853,2,0.853,3,0.09,4,0.09,5,0.06,7,0.303,8,0.013,9,1.434,10,2.548,11,4.959,12,2.303,13,0.446,19,1.851,21,2.119,22,2.984,26,3.317,28,0.09,29,0.123,30,1.171,31,1.978,33,0.007,34,0.007,90,2.522,96,1.806,100,1.96,104,0.34,105,1.238,106,5.108,107,1.006,109,1.93,113,3.182,114,2.548,115,1.434,116,2.303,117,4.387,118,4.387,119,3.827,120,4.595,121,4.248,122,3.827,123,2.921,124,2.369,125,1.806,126,5.855,127,2.921,128,2.921,129,1.924,130,0.865,131,0.792,132,1.861,133,2.101,134,2.26,135,2.921,136,2.921,137,2.303,138,2.921,139,4.387,140,2.921,141,6.576,142,2.921,143,6.821,144,4.714,145,2.921,146,2.921,147,4.553,148,2.921,149,2.921,150,2.921,151,2.921,152,2.921,153,2.921,154,2.921,155,2.921,156,2.921,157,2.921,158,2.921,159,2.303,160,1.851,161,2.548,162,2.921,163,1.746,164,1.216,165,2.363,166,2.303,167,2.921,168,2.921,169,2.303,170,4.387,171,1.501,172,1.265,173,2.779,174,1.973,175,2.119,176,2.921,177,2.921,178,2.303,179,2.921,180,2.921,181,2.921,182,2.921,183,2.921,184,5.267,185,2.921,186,2.921,187,2.921,188,2.921,189,2.921,190,2.921,191,1.899,192,1.632,193,2.921,194,2.303,195,0.746,196,1.973,197,1.265,198,1.973,199,2.921,200,2.921,201,2.921,202,2.921,203,1.702,204,2.303,205,2.921,206,2.303,207,2.921,208,2.303,209,2.921,210,1.317,211,2.921,212,2.921,213,4.387,214,2.921,215,2.921,216,2.921,217,2.921,218,2.921]],["title/modules/AuthModule.html",[35,0.976,47,2.755]],["body/modules/AuthModule.html",[2,1.672,3,0.131,4,0.131,5,0.088,7,0.331,8,0.013,13,0.648,16,4.148,17,2.404,22,4.577,28,0.131,29,0.179,33,0.009,34,0.009,35,1.55,37,1.7,38,1.766,39,1.913,40,1.913,41,1.766,42,2.922,43,2.922,47,5.547,55,4.73,57,4.73,58,2.582,59,1.913,60,1.913,62,3.047,66,4.995,67,3.701,89,3.344,90,1.42,97,3.344,113,4.702,159,3.344,219,3.701,220,4.243,221,3.701,222,3.701,223,5.041,224,5.041,225,4.243,226,5.726,227,2.688,228,4.243,229,4.243,230,3.344,231,4.243,232,4.513,233,4.243,234,4.243,235,4.243,236,3.701,237,3.701,238,4.243,239,3.701,240,4.243]],["title/injectables/AuthService.html",[22,2.311,101,0.771]],["body/injectables/AuthService.html",[3,0.073,4,0.073,5,0.049,7,0.28,8,0.013,13,0.362,16,3.791,17,1.342,22,2.115,28,0.073,29,0.1,30,1.496,31,2.364,33,0.006,34,0.006,90,2.494,96,1.675,100,1.389,101,0.706,102,0.851,104,0.275,105,1.054,107,0.934,109,1.711,110,1.329,119,4.574,120,4.031,121,4.138,122,3.257,124,2.197,129,1.852,130,0.968,131,0.764,132,1.791,133,2.125,134,2.339,143,5.899,144,4.386,147,1.719,163,1.416,164,0.986,165,2.825,166,1.868,178,3.642,191,1.026,192,2.576,195,1.621,203,2.32,204,2.943,206,1.868,210,2.364,230,1.868,232,2.943,236,3.257,239,2.067,241,2.067,242,3.734,243,5.243,244,3.734,245,2.369,246,3.265,247,6.343,248,2.369,249,3.734,250,2.369,251,3.734,252,2.369,253,3.734,254,2.369,255,3.734,256,2.369,257,4.031,258,3.734,259,2.369,260,3.734,261,4.574,262,2.369,263,1.6,264,3.257,265,2.067,266,2.369,267,1.068,268,1.6,269,2.369,270,3.734,271,2.369,272,2.369,273,3.352,274,6.06,275,3.734,276,1.276,277,3.734,278,2.369,279,2.693,280,3.257,281,2.067,282,1.665,283,2.123,284,3.734,285,4.777,286,3.734,287,3.734,288,2.97,289,3.134,290,4.133,291,3.734,292,3.734,293,3.734,294,3.734,295,3.734,296,2.369,297,2.369,298,3.734,299,4.621,300,2.369,301,3.734,302,2.369,303,3.257,304,2.369,305,3.734,306,4.621,307,2.369,308,2.369,309,2.067,310,3.734,311,2.067,312,1.719,313,3.322,314,5.243,315,3.257,316,3.734,317,2.369,318,0.986]],["title/controllers/CompaniesController.html",[0,1.191,319,2.96]],["body/controllers/CompaniesController.html",[0,0.977,2,0.977,3,0.103,4,0.103,5,0.069,7,0.295,8,0.013,9,2.8,13,0.511,26,3.231,28,0.103,29,0.141,32,1.449,33,0.007,34,0.007,73,1.201,96,1.828,104,0.389,105,1.369,107,1.019,109,1.954,110,1.382,115,1.643,124,2.71,125,1.828,129,2.021,130,0.908,131,0.873,132,1.954,133,2.306,164,1.393,171,1.719,172,1.449,319,3.518,320,2.919,321,2.919,322,1.416,323,4.849,324,2.285,325,1.872,326,1.943,327,2.201,328,2.919,329,4.857,330,3.346,331,3.346,332,4.849,333,3.346,334,2.427,335,3.962,336,2.94,337,2.919,338,3.346,339,3.072,340,1.341,341,2.328,342,2.638,343,3.346,344,2.672,345,1.341,346,2.747,347,3.346,348,1.449,349,4.938,350,2.899,351,3.346,352,2.747,353,1.803,354,1.896,355,2.186,356,3.613,357,2.919,358,1.341,359,3.822,360,1.341,361,1.449,362,3.346,363,3.346,364,1.509,365,3.346,366,2.427,367,2.26,368,3.346,369,3.346,370,2.12,371,2.12,372,3.346,373,1.896,374,1.896,375,3.346,376,2.12,377,3.346,378,1.896,379,3.346]],["title/modules/CompaniesModule.html",[35,0.976,48,2.755]],["body/modules/CompaniesModule.html",[2,1.922,3,0.162,4,0.162,5,0.109,7,0.321,8,0.013,13,0.803,28,0.162,29,0.222,33,0.01,34,0.01,35,1.719,37,2.108,38,2.19,39,2.371,40,2.371,41,2.19,42,3.241,43,2.371,48,5.344,58,2.969,59,2.371,60,2.371,62,2.472,64,2.833,65,1.535,130,0.69,319,5.215,356,5.014,357,4.588,380,4.588,381,4.588,382,5.26,383,5.26,384,1.822,385,4.777,386,4.588,387,2.979,388,4.588,389,2.19]],["title/injectables/CompaniesService.html",[101,0.771,356,2.585]],["body/injectables/CompaniesService.html",[3,0.088,4,0.088,5,0.059,7,0.301,8,0.013,13,0.437,28,0.088,29,0.121,30,1.73,31,1.29,33,0.007,34,0.007,65,0.835,72,1.469,73,1.867,74,1.469,75,1.468,90,2.51,96,1.846,101,0.816,102,1.027,104,0.333,105,1.219,107,0.963,109,1.756,110,0.949,124,2.525,129,1.909,130,0.858,131,0.825,132,1.846,133,2.058,134,2.236,164,1.191,191,2.509,192,2.433,195,1.671,203,1.681,282,1.518,288,2.946,289,3.109,303,2.495,315,2.495,322,1.26,324,1.73,325,1.667,326,1.73,327,2.008,328,3.767,329,4.143,334,3.132,335,3.94,336,2.445,339,3.94,340,1.73,341,2.415,344,2.524,345,1.73,348,1.87,349,4.83,355,1.29,356,2.736,358,1.146,359,3.404,360,1.146,384,1.496,386,2.495,390,2.495,391,2.861,392,3.282,393,2.861,394,4.318,395,2.861,396,2.861,397,2.861,398,2.861,399,2.861,400,2.075,401,1.62,402,2.495,403,1.812,404,1.71,405,1.71,406,2.861,407,2.075,408,2.861,409,2.861,410,2.861,411,1.239,412,3.767,413,2.861,414,1.812,415,1.812,416,1.812,417,2.736,418,1.812,419,1.812,420,1.812,421,1.812,422,1.62,423,2.736,424,1.812,425,2.736,426,2.861,427,2.736,428,1.812,429,2.861,430,1.812,431,1.812,432,1.812,433,1.812,434,1.812,435,1.812,436,1.62,437,1.469,438,1.469,439,2.861,440,3.767,441,2.861,442,4.318,443,1.29,444,2.075,445,2.495,446,2.861]],["title/classes/Company.html",[29,0.172,384,1.414]],["body/classes/Company.html",[3,0.118,4,0.118,5,0.079,7,0.22,8,0.013,28,0.189,29,0.161,33,0.008,34,0.008,65,1.116,75,1.505,100,1.423,104,0.444,107,1.159,110,1.437,125,2.079,130,0.806,131,1.036,195,1.568,203,1.236,282,1.792,384,1.847,385,2.773,389,2.219,400,2.773,411,2.658,443,2.767,445,5.354,447,0.977,448,2.773,449,1.609,450,3.477,451,3.477,452,3.477,453,3.153,454,3.477,455,3.888,456,3.477,457,4.94,458,3.823,459,3.132,460,3.823,461,3.477,462,3.669,463,4.323,464,3.823,465,3.823,466,3.823,467,3.823,468,2.738,469,3.823,470,3.823,471,3.823,472,3.823,473,3.823,474,2.285,475,3.02,476,2.285,477,2.555,478,3.335]],["title/classes/Company-1.html",[29,0.144,384,1.179,422,1.928]],["body/classes/Company-1.html",[3,0.127,4,0.127,5,0.085,7,0.283,8,0.013,28,0.173,29,0.29,33,0.009,34,0.009,75,1.586,100,1.535,104,0.48,107,0.94,110,1.427,125,1.687,130,0.942,131,0.905,195,1.632,318,3.292,341,1.755,361,1.786,384,2.486,447,1.054,449,1.696,451,2.337,453,2.886,455,4.047,456,2.337,459,3.206,468,2.119,477,2.339,479,5.406,480,2.992,481,4.051,482,4.125,483,4.125,484,4.125,485,2.466,486,3.559,487,2.025,488,3.026,489,3.026,490,3.026,491,3.026,492,2.025,493,2.466,494,2.466,495,3.565,496,3.252,497,3.598,498,2.466,499,3.559,500,3.794,501,4.075,502,4.075,503,3.358,504,3.598,505,2.992,506,3.598,507,2.992]],["title/classes/Company-2.html",[29,0.144,384,1.179,508,2.683]],["body/classes/Company-2.html",[3,0.121,4,0.121,5,0.081,7,0.291,8,0.013,28,0.192,29,0.298,32,2.35,33,0.008,34,0.008,75,1.532,104,0.456,107,0.799,110,1.412,125,1.434,130,0.925,131,0.847,172,1.699,173,2.486,174,4.203,195,1.59,263,2.65,276,3.353,282,2.182,283,2.316,318,3.321,341,1.695,361,1.699,366,3.938,384,2.442,447,1.003,449,1.639,450,3.075,451,2.223,456,2.223,459,2.35,477,2.591,481,3.969,485,2.346,487,2.665,488,2.924,489,2.924,490,3.353,491,2.924,492,1.926,493,3.245,495,3.487,509,2.65,510,3.924,511,3.924,512,4.906,513,3.245,514,2.223,515,3.093,516,2.847,517,3.093,518,2.847,519,3.093,520,3.093,521,2.847,522,2.65,523,3.439,524,3.439,525,3.093,526,2.847,527,4.279]],["title/classes/CreateCompanyDto.html",[29,0.172,329,2.585]],["body/classes/CreateCompanyDto.html",[3,0.144,4,0.144,5,0.096,7,0.193,8,0.013,28,0.144,29,0.258,33,0.009,34,0.009,104,0.543,107,1.13,110,1.447,125,1.904,130,0.982,131,0.968,318,3.002,329,3.868,447,1.194,449,1.844,450,4.238,451,3.852,453,3.843,455,4.74,456,3.852,459,3.122,481,3.673,487,2.295,492,2.295,495,3.574,528,6.819,529,3.684,530,4.085,531,4.674,532,4.674,533,4.674,534,4.674,535,4.674,536,4.674]],["title/classes/CreateFileDto.html",[29,0.172,537,2.585]],["body/classes/CreateFileDto.html",[3,0.197,4,0.197,5,0.132,8,0.012,28,0.197,29,0.27,33,0.011,34,0.011,447,1.633,537,4.691,538,5.575,539,5.037]],["title/classes/CreateJobDto.html",[29,0.172,494,2.439]],["body/classes/CreateJobDto.html",[3,0.1,4,0.1,5,0.067,7,0.255,8,0.013,28,0.146,29,0.26,33,0.007,34,0.007,75,1.339,100,1.208,104,0.377,107,1.145,110,1.406,125,2.012,130,0.899,131,0.997,195,0.829,318,3.129,341,1.925,361,1.405,384,2.45,447,0.829,449,1.432,451,3.174,453,3.368,455,2.056,456,3.174,459,3.336,468,2.436,477,1.351,479,6.182,480,2.354,481,3.851,485,1.94,486,3.004,487,1.593,488,2.554,489,2.554,490,2.554,491,2.554,492,1.593,493,1.94,494,2.835,495,3.656,496,2.558,497,4.137,498,3.35,499,4.154,500,4.428,501,4.757,502,4.757,503,3.919,504,4.137,505,4.065,506,4.137,507,4.065,530,4.189,540,2.831,541,3.245,542,3.245,543,3.245,544,3.245,545,3.245,546,3.245,547,3.245,548,3.245,549,3.245,550,3.245,551,3.245,552,3.245,553,3.245,554,3.245,555,3.245]],["title/classes/CreatePermissionDto.html",[29,0.172,556,2.585]],["body/classes/CreatePermissionDto.html",[3,0.149,4,0.149,5,0.1,7,0.2,8,0.013,28,0.149,29,0.264,33,0.01,34,0.01,35,1.808,104,0.562,107,1.075,110,1.458,125,1.93,130,0.993,131,0.922,318,3.042,447,1.236,449,1.885,481,3.713,486,3.065,487,2.375,488,2.606,489,2.606,490,2.606,491,2.606,492,2.375,495,3.6,513,2.892,530,4.139,556,3.956,557,6.598,558,3.814,559,4.791,560,5.107,561,4.838,562,4.838,563,4.838,564,4.838]],["title/classes/CreateResumeDto.html",[29,0.172,565,2.439]],["body/classes/CreateResumeDto.html",[3,0.125,4,0.125,5,0.084,7,0.261,8,0.013,28,0.171,29,0.287,33,0.008,34,0.008,75,1.565,104,0.47,107,1.084,110,1.376,125,1.944,131,0.951,282,2.081,318,3.242,447,1.034,449,1.674,477,3.196,481,3.867,485,2.419,486,2.564,487,1.987,488,2.18,489,2.18,490,2.18,491,2.18,492,1.987,495,3.681,513,3.781,530,4.17,565,3.315,566,5.941,567,2.936,568,5.468,569,5.468,570,5.171,571,5.941,572,5.171,573,4.047,574,4.047,575,4.047,576,4.047,577,4.047,578,4.047,579,2.564]],["title/classes/CreateRoleDto.html",[29,0.172,580,2.585]],["body/classes/CreateRoleDto.html",[3,0.137,4,0.137,5,0.092,7,0.245,8,0.013,28,0.137,29,0.25,33,0.009,34,0.009,75,1.671,100,2.203,104,0.518,107,1.042,110,1.292,125,1.87,130,0.967,131,0.893,279,4.08,318,3.267,447,1.139,449,1.787,453,3.784,468,3.636,477,2.464,481,3.617,486,3.75,487,2.189,488,2.402,489,2.402,490,2.402,491,2.402,492,2.189,495,3.414,496,3.514,503,4.619,513,3.538,526,4.294,530,4.01,580,3.75,581,6.426,582,3.514,583,4.458,584,4.458,585,4.458,586,4.458,587,4.458,588,4.458,589,6.645,590,4.458,591,5.919,592,3.514]],["title/classes/CreateSubscriberDto.html",[29,0.172,593,2.585]],["body/classes/CreateSubscriberDto.html",[3,0.173,4,0.173,5,0.116,7,0.233,8,0.013,28,0.173,29,0.29,33,0.01,34,0.01,104,0.654,107,1.011,110,1.408,125,1.486,131,0.866,282,2.163,318,2.343,447,1.438,449,2.073,481,3.371,487,2.763,492,2.763,495,3.095,498,4.728,530,3.188,593,4.35,594,6.463,595,4.436,596,5.627,597,5.627]],["title/classes/CreateUserCvDto.html",[29,0.172,579,2.585]],["body/classes/CreateUserCvDto.html",[3,0.135,4,0.135,5,0.091,7,0.273,8,0.013,28,0.18,29,0.297,33,0.009,34,0.009,75,1.656,104,0.511,107,0.971,110,1.339,125,1.743,131,0.888,282,1.712,318,3.298,447,1.124,449,1.771,477,3.206,481,3.928,485,2.629,486,2.786,487,2.159,488,2.369,489,2.369,490,2.369,491,2.369,492,2.159,495,3.638,513,4.208,530,3.738,565,2.629,566,5.549,567,3.19,568,5.586,569,5.586,570,4.255,571,6.07,572,4.255,579,3.716,598,4.397,599,4.397,600,4.397,601,4.397]],["title/classes/CreateUserDto.html",[29,0.172,514,2.311]],["body/classes/CreateUserDto.html",[3,0.099,4,0.099,5,0.066,7,0.27,8,0.013,28,0.171,29,0.276,32,2.036,33,0.007,34,0.007,75,1.327,104,0.373,107,1.118,110,1.417,125,1.909,130,0.895,131,0.979,172,1.389,173,2.032,174,5.19,195,0.819,263,2.166,276,3.674,282,2.218,283,2.622,318,3.231,341,1.914,361,1.389,366,3.411,384,2.441,447,0.819,449,1.419,450,3.697,451,3.153,456,3.153,459,2.654,477,2.317,481,3.773,485,1.917,487,2.733,488,2.533,489,2.533,490,2.998,491,2.533,492,1.575,493,2.81,495,3.555,509,2.166,512,4.387,513,2.81,514,2.663,515,2.528,516,2.327,517,2.528,518,2.327,519,2.528,520,2.528,521,2.327,522,3.759,523,4.134,524,4.134,525,3.706,526,3.411,527,3.706,530,3.863,540,2.798,602,3.207,603,3.207,604,3.207,605,3.207,606,3.207,607,3.207,608,3.207,609,3.207,610,3.207,611,3.207,612,3.207,613,3.207,614,3.207]],["title/controllers/DatabasesController.html",[0,1.191,615,2.96]],["body/controllers/DatabasesController.html",[0,1.761,2,1.761,3,0.186,4,0.186,5,0.124,7,0.296,8,0.013,13,0.921,28,0.186,29,0.255,32,2.612,33,0.011,34,0.011,115,2.961,364,2.719,615,5.193,616,5.261,617,6.031,618,4.836,619,5.261,620,6.031]],["title/modules/DatabasesModule.html",[35,0.976,49,2.755]],["body/modules/DatabasesModule.html",[2,1.802,3,0.146,4,0.146,5,0.098,7,0.329,8,0.013,13,0.726,28,0.146,29,0.201,33,0.009,34,0.009,35,1.64,37,1.905,38,1.98,39,2.144,40,2.144,41,1.98,42,3.091,43,2.144,49,5.373,58,2.784,59,2.144,60,2.144,62,2.235,64,2.561,65,1.388,130,0.9,133,1.342,246,4.153,267,2.144,268,3.211,283,1.769,290,3.748,387,2.693,389,2.855,615,4.974,618,4.884,619,4.148,621,4.148,622,4.148,623,4.755,624,4.755,625,4.169,626,4.169,627,4.148,628,3.912,629,2.842,630,4.148,631,3.748,632,3.449]],["title/injectables/DatabasesService.html",[101,0.771,618,2.585]],["body/injectables/DatabasesService.html",[3,0.103,4,0.103,5,0.069,7,0.308,8,0.013,13,0.509,16,4.263,17,1.889,28,0.103,29,0.141,30,1.938,31,2.989,33,0.007,34,0.007,35,0.797,65,0.973,72,1.713,73,1.197,74,1.713,75,0.941,90,1.904,100,1.8,101,0.914,102,1.197,104,0.388,105,1.365,107,0.712,109,0.941,129,0.973,130,0.936,131,0.421,132,0.941,133,1.607,192,2.771,203,2.305,246,3.363,267,1.503,268,2.252,273,4.129,276,2.606,279,3.207,282,1.412,283,2.467,325,1.867,392,4.284,401,1.889,450,2.74,453,2.485,503,2.891,523,3.064,524,3.064,618,3.064,627,2.909,629,1.993,630,2.909,633,2.909,634,6.913,635,2.909,636,4.965,637,4.486,638,5.692,639,3.335,640,4.219,641,3.335,642,2.252,643,2.113,644,2.252,645,4.486,646,2.629,647,4.129,648,3.335,649,2.419,650,3.335,651,3.335,652,2.909,653,3.335,654,3.335,655,3.335,656,3.335,657,3.335,658,5.692,659,3.335,660,5.692,661,3.335,662,5.692,663,3.335,664,5.449,665,3.335,666,3.335,667,3.335,668,3.813,669,2.909,670,3.335,671,3.335,672,3.335,673,3.335,674,3.335,675,5.692,676,4.219,677,4.837,678,3.335,679,3.335,680,3.335,681,4.837,682,4.219,683,4.837,684,3.335,685,3.335,686,3.335,687,3.335,688,3.335,689,2.252,690,3.335]],["title/classes/File.html",[5,0.084,29,0.172]],["body/classes/File.html",[3,0.197,4,0.197,5,0.162,8,0.012,28,0.197,29,0.271,33,0.011,34,0.011,447,1.638,691,5.593]],["title/controllers/FilesController.html",[0,1.191,692,2.96]],["body/controllers/FilesController.html",[0,1.088,2,1.088,3,0.115,4,0.115,5,0.136,7,0.305,8,0.013,9,1.83,13,0.569,28,0.115,29,0.157,32,1.614,33,0.008,34,0.008,73,1.338,96,1.827,104,0.433,105,1.478,107,1.018,109,1.953,110,1.396,115,1.83,125,1.827,129,1.917,130,0.862,131,0.828,132,1.854,160,2.361,163,2.228,171,1.915,172,1.614,210,1.68,324,2.631,325,2.021,326,2.099,327,2.021,340,1.494,344,2.769,345,1.494,346,2.967,348,1.614,350,3.13,352,2.967,353,2.008,354,2.111,358,1.494,360,1.494,361,1.614,364,1.68,373,2.967,374,2.111,378,2.111,537,2.361,692,3.799,693,3.251,694,2.938,695,6.054,696,3.727,697,3.727,698,3.727,699,5.08,700,3.727,701,3.727,702,6.054,703,3.727,704,5.237,705,3.727,706,3.727,707,4.568,708,3.727,709,5.237,710,5.237,711,3.727,712,3.836,713,3.251,714,4.128,715,3.727,716,2.704,717,3.727,718,3.727,719,3.727,720,3.727,721,3.727,722,3.727,723,3.727,724,3.727,725,3.727,726,3.727,727,5.237,728,3.727,729,3.727,730,3.727,731,3.727,732,3.727,733,3.727,734,3.727,735,3.727,736,3.727]],["title/modules/FilesModule.html",[35,0.976,50,2.755]],["body/modules/FilesModule.html",[2,1.929,3,0.163,4,0.163,5,0.109,7,0.321,8,0.013,13,0.808,28,0.163,29,0.223,33,0.01,34,0.01,35,1.723,37,2.119,38,2.202,39,2.384,40,2.384,41,2.202,42,3.249,43,2.384,50,5.352,58,2.979,59,2.384,60,2.384,62,2.486,163,3.161,692,5.228,712,5.021,713,4.613,716,3.836,737,4.613,738,4.613,739,5.288,740,5.288,741,5.288,742,4.793,743,5.288,744,5.288,745,5.288]],["title/injectables/FilesService.html",[101,0.771,712,2.585]],["body/injectables/FilesService.html",[3,0.134,4,0.134,5,0.151,7,0.271,8,0.013,13,0.664,28,0.134,29,0.184,33,0.009,34,0.009,96,1.93,101,1.1,102,1.561,104,0.505,105,1.643,107,1.075,109,2.168,110,1.334,129,2.046,130,0.92,131,0.884,132,1.978,210,1.96,322,1.699,324,2.808,325,2.247,326,2.332,327,2.247,340,2.332,341,2.468,344,2.902,345,2.332,348,2.52,358,1.742,360,1.742,537,4.628,694,3.427,699,5.185,712,3.688,714,4.588,746,3.793,747,5.821,748,4.348,749,4.348,750,4.348,751,4.348,752,4.348,753,6.373,754,4.348,755,3.793,756,3.793]],["title/interfaces/IUser.html",[124,1.414,757,2.585]],["body/interfaces/IUser.html",[3,0.161,4,0.161,5,0.108,8,0.013,28,0.161,33,0.01,34,0.01,35,1.247,104,0.606,110,1.537,124,2.27,130,1.037,131,1.032,132,1.849,195,2.018,279,3.859,282,2.193,283,2.795,449,1.978,461,4.255,559,3.305,757,3.305,758,4.112,759,4.551]],["title/controllers/JobsController.html",[0,1.191,760,2.96]],["body/controllers/JobsController.html",[0,0.996,2,0.996,3,0.105,4,0.105,5,0.07,7,0.297,8,0.013,9,2.83,13,0.521,26,3.266,28,0.105,29,0.144,32,1.477,33,0.008,34,0.008,73,1.224,90,2.331,96,1.767,104,0.397,105,1.388,107,0.985,109,1.888,110,1.052,115,1.675,124,2.634,125,1.767,129,1.952,130,0.878,131,0.844,132,1.888,133,2.262,134,1.898,147,3.567,160,2.161,164,1.42,171,1.752,172,1.477,191,2.129,192,1.269,194,2.689,195,0.872,196,2.304,197,1.477,198,2.304,322,1.435,324,2.31,325,1.898,326,1.97,327,2.225,336,2.966,337,2.976,340,1.367,341,2.487,342,2.689,344,2.772,345,1.367,346,2.785,348,1.477,350,2.039,352,2.785,353,1.838,354,1.932,355,2.217,358,1.367,360,1.367,361,1.477,364,1.538,367,2.304,370,2.161,371,2.161,373,1.932,374,1.932,376,2.161,378,1.932,437,3.241,438,2.526,494,4.165,760,3.567,761,2.976,762,2.976,763,2.976,764,3.411,765,2.976,766,3.411,767,3.411,768,3.411,769,4.964,770,3.411,771,3.411,772,3.653,773,2.976,774,3.876,775,3.411,776,3.411,777,3.411,778,3.411,779,3.411,780,3.411,781,2.689,782,3.411,783,3.411]],["title/modules/JobsModule.html",[35,0.976,51,2.755]],["body/modules/JobsModule.html",[2,1.929,3,0.163,4,0.163,5,0.109,7,0.321,8,0.013,13,0.808,28,0.163,29,0.223,33,0.01,34,0.01,35,1.723,37,2.119,38,2.202,39,2.384,40,2.384,41,2.202,42,3.249,43,2.384,51,5.352,58,2.979,59,2.384,60,2.384,62,2.486,64,2.849,65,1.544,130,0.694,387,2.996,389,2.202,760,5.228,772,5.021,773,4.613,784,4.613,785,4.613,786,5.288,787,5.288,788,2.849,789,4.793,790,4.613,791,4.613]],["title/injectables/JobsService.html",[101,0.771,772,2.585]],["body/injectables/JobsService.html",[3,0.089,4,0.089,5,0.06,7,0.29,8,0.013,13,0.442,28,0.089,29,0.122,30,1.744,31,1.303,33,0.007,34,0.007,65,0.844,72,1.485,73,1.879,74,1.485,75,0.816,90,2.516,96,1.65,101,0.822,102,1.038,104,0.336,105,1.229,107,0.966,109,1.764,124,2.532,129,1.916,130,0.92,131,0.788,132,1.853,133,2.025,134,2.248,164,1.203,191,3.106,192,2.443,195,1.791,203,1.692,282,1.528,288,2.965,289,3.129,322,1.27,324,1.744,325,1.68,326,1.744,327,1.68,336,2.461,340,1.744,341,2.24,344,2.706,345,1.744,348,1.884,355,1.303,358,1.158,360,1.158,384,1.001,392,3.299,401,1.637,403,1.831,404,1.728,405,1.728,411,1.252,414,1.831,415,1.831,416,1.831,417,2.757,418,1.831,419,1.831,420,1.831,421,1.831,422,1.637,423,2.757,424,1.831,425,2.757,427,2.757,428,1.831,430,1.831,431,1.831,432,1.831,433,1.831,434,1.831,435,1.831,436,1.637,437,3.209,438,3.209,443,1.303,453,1.485,455,1.831,494,3.734,498,1.728,499,1.831,500,1.952,501,2.097,502,2.097,503,1.728,505,2.097,507,2.097,763,3.796,765,3.796,769,4.734,772,2.757,774,3.43,781,2.278,788,1.557,790,2.522,792,2.522,793,2.891,794,2.891,795,4.352,796,2.891,797,2.891,798,2.891,799,2.891,800,2.891,801,2.097,802,2.891,803,2.891,804,2.891,805,2.891,806,2.891,807,2.891,808,2.891,809,2.891,810,2.891,811,2.891,812,2.891,813,2.891,814,2.891,815,2.891,816,2.891,817,2.891,818,2.891,819,2.891,820,2.891,821,4.352,822,1.419,823,2.891]],["title/injectables/JwtAuthGuard.html",[24,2.755,101,0.771]],["body/injectables/JwtAuthGuard.html",[3,0.217,4,0.121,5,0.081,7,0.291,8,0.013,11,4.51,13,0.598,24,3.66,28,0.121,29,0.165,30,1.569,33,0.008,34,0.008,70,2.644,96,1.642,100,1.457,101,1.024,102,1.406,104,0.455,105,1.53,107,0.915,109,1.53,129,1.815,130,0.816,131,0.784,132,1.755,133,1.989,161,3.416,163,2.341,203,2.415,206,3.087,210,2.444,227,2.481,267,1.766,279,2.784,285,3.087,313,3.939,364,1.766,521,2.841,824,5.853,825,3.087,826,2.548,827,5.421,828,5.421,829,5.421,830,3.416,831,5.744,832,3.916,833,5.421,834,5.42,835,3.916,836,4.867,837,5.421,838,3.916,839,6.71,840,3.916,841,3.66,842,3.416,843,4.273,844,3.087,845,2.841,846,4.729,847,3.916,848,4.273,849,5.421,850,3.916,851,3.916,852,5.421,853,3.916,854,3.916,855,3.916,856,3.916,857,5.421,858,3.916,859,5.421,860,3.916,861,5.421,862,3.916,863,3.916,864,3.916,865,3.916,866,3.916]],["title/injectables/JwtStrategy.html",[101,0.771,223,2.755]],["body/injectables/JwtStrategy.html",[3,0.129,4,0.129,5,0.087,7,0.315,8,0.013,13,0.641,16,4.448,17,2.377,28,0.129,29,0.177,30,2.278,31,2.563,33,0.009,34,0.009,90,2.156,96,1.108,101,1.074,102,1.506,104,0.488,105,1.605,107,0.837,109,1.185,110,1.038,124,2.393,129,1.659,130,0.947,131,0.717,132,1.605,134,2.194,164,1.747,165,3.721,166,3.308,178,5.08,192,1.562,195,1.647,203,1.837,204,3.308,223,3.838,227,2.659,237,3.661,257,4.958,273,3.044,279,2.156,280,3.661,282,1.659,283,2.57,285,4.48,312,3.044,629,2.509,826,2.672,845,3.044,867,3.661,868,4.958,869,4.958,870,4.197,871,4.197,872,5.684,873,4.197,874,4.197,875,3.661,876,3.308,877,3.661,878,3.661,879,5.684,880,5.684,881,4.197,882,5.684,883,4.197,884,4.197,885,4.197,886,4.197,887,4.197,888,4.197,889,4.197,890,4.197,891,4.197,892,4.197,893,4.197,894,4.197,895,4.197,896,4.197,897,4.197]],["title/injectables/LocalAuthGuard.html",[19,2.585,101,0.771]],["body/injectables/LocalAuthGuard.html",[3,0.187,4,0.187,5,0.126,7,0.298,8,0.013,13,0.93,19,4.56,28,0.187,29,0.257,33,0.011,34,0.011,101,1.36,102,2.186,227,3.857,825,4.799,826,3.384,842,5.311,898,4.799,899,7.198]],["title/injectables/LocalStrategy.html",[101,0.771,224,2.755]],["body/injectables/LocalStrategy.html",[3,0.149,4,0.149,5,0.1,7,0.302,8,0.013,13,0.739,22,4.387,28,0.149,29,0.204,30,1.939,33,0.01,34,0.01,90,2.313,96,1.278,101,1.18,102,1.737,104,0.562,105,1.763,107,0.919,109,1.366,110,1.414,129,1.823,130,0.82,131,0.788,132,1.763,133,1.952,159,3.814,191,2.704,192,1.8,203,1.564,210,2.181,224,4.217,227,3.065,263,3.267,264,5.447,276,4.074,313,3.065,364,2.181,826,2.935,841,3.267,845,3.51,868,5.447,869,5.447,875,4.22,876,3.814,878,4.22,900,4.22,901,4.838,902,4.838,903,6.244,904,4.838,905,4.22,906,4.838,907,4.838,908,4.838]],["title/controllers/MailController.html",[0,1.191,909,2.96]],["body/controllers/MailController.html",[0,1.228,2,1.228,3,0.129,4,0.129,5,0.087,7,0.308,8,0.013,13,0.642,26,3.225,28,0.129,29,0.178,30,1.685,31,2.566,32,1.821,33,0.009,34,0.009,37,1.685,90,2.159,96,1.111,104,0.489,105,1.607,107,0.838,109,1.607,115,2.065,125,1.503,134,1.624,137,3.315,160,2.665,171,2.16,172,1.821,192,1.565,210,1.896,361,1.821,499,2.665,500,2.84,669,3.669,682,3.669,836,3.051,909,4.129,910,3.669,911,5.692,912,6.914,913,6.914,914,4.206,915,6.452,916,4.206,917,5.692,918,4.206,919,4.088,920,3.669,921,6.452,922,3.051,923,3.315,924,5.692,925,4.206,926,3.315,927,4.206,928,4.206,929,4.206,930,4.206,931,4.206,932,4.206,933,4.965,934,4.206,935,4.206,936,3.669,937,4.206,938,4.206,939,3.669,940,4.206,941,4.206,942,4.206,943,4.206,944,4.206,945,4.206,946,4.206,947,4.206,948,4.206,949,4.206,950,4.206,951,4.206,952,4.206,953,5.692,954,5.692,955,4.206,956,4.206,957,4.206,958,4.206,959,4.206,960,4.206,961,4.206,962,4.206,963,5.692,964,4.206,965,4.206,966,3.669,967,4.206,968,3.669,969,4.206,970,3.669,971,4.206,972,4.206,973,4.206,974,4.206,975,4.206,976,4.206,977,4.206,978,4.206,979,4.206,980,4.206]],["title/modules/MailModule.html",[35,0.976,52,2.755]],["body/modules/MailModule.html",[2,1.749,3,0.14,4,0.14,5,0.094,7,0.321,8,0.013,13,0.694,16,4.262,17,2.573,28,0.14,29,0.192,33,0.009,34,0.009,35,1.603,37,2.401,38,1.891,39,2.048,40,2.048,41,1.891,42,3.024,43,2.048,52,5.141,58,2.702,59,2.048,60,2.048,62,2.135,89,3.58,90,1.52,97,3.58,100,2.23,116,3.58,133,1.282,210,2.048,261,3.962,311,3.962,312,3.295,909,4.865,919,4.823,920,3.962,922,4.347,923,3.58,926,3.58,933,3.962,936,3.962,939,3.962,981,3.962,982,3.962,983,4.542,984,4.542,985,5.992,986,4.542,987,4.542,988,4.542,989,4.542,990,4.542,991,4.542,992,4.542,993,4.542,994,4.542,995,4.542,996,4.542,997,4.542,998,4.542,999,4.542,1000,3.962,1001,4.542,1002,4.542,1003,4.542,1004,4.542,1005,4.542]],["title/injectables/MailService.html",[101,0.771,919,2.585]],["body/injectables/MailService.html",[3,0.193,4,0.193,5,0.13,7,0.26,8,0.012,13,0.96,28,0.193,29,0.265,33,0.011,34,0.011,101,1.386,102,2.257,919,4.647,1006,5.484]],["title/injectables/MulterConfigService.html",[101,0.771,742,2.96]],["body/injectables/MulterConfigService.html",[3,0.114,4,0.114,5,0.142,7,0.285,8,0.013,13,0.565,28,0.114,29,0.156,33,0.008,34,0.008,96,1.592,100,1.376,101,0.984,102,1.328,104,0.43,105,1.47,107,0.888,109,1.47,110,1.101,129,1.08,130,0.791,131,0.467,132,1.044,137,2.915,141,4.544,147,2.683,163,2.211,203,1.195,267,1.668,322,1.08,412,6.018,449,1.573,499,2.343,518,2.683,649,2.683,689,3.517,707,3.226,716,2.683,742,3.779,1000,3.226,1007,3.226,1008,6.029,1009,6.545,1010,5.209,1011,3.699,1012,6.029,1013,5.209,1014,3.699,1015,3.699,1016,5.26,1017,3.226,1018,3.699,1019,5.209,1020,5.209,1021,5.209,1022,3.226,1023,3.779,1024,3.699,1025,3.699,1026,5.209,1027,5.209,1028,3.699,1029,3.699,1030,3.699,1031,3.699,1032,3.699,1033,3.699,1034,3.699,1035,3.699,1036,3.699,1037,3.699,1038,3.699,1039,3.699,1040,3.699,1041,3.699,1042,3.779,1043,3.699,1044,3.699,1045,5.209,1046,3.699,1047,3.699,1048,3.699,1049,3.699,1050,6.029,1051,3.699,1052,3.699,1053,3.699,1054,3.699,1055,3.699,1056,3.699,1057,3.699,1058,3.699,1059,3.699,1060,3.699,1061,3.699,1062,3.699,1063,3.699,1064,3.699,1065,3.699,1066,3.699,1067,3.699,1068,5.209,1069,3.699,1070,3.699,1071,3.699,1072,3.699,1073,5.209,1074,3.699,1075,3.699,1076,3.699,1077,5.209,1078,5.209,1079,3.699,1080,3.699,1081,3.699,1082,5.209,1083,3.699,1084,5.209,1085,3.699]],["title/controllers/PermissionsController.html",[0,1.191,1086,2.96]],["body/controllers/PermissionsController.html",[0,1.021,2,1.021,3,0.108,4,0.108,5,0.072,7,0.299,8,0.013,9,2.87,13,0.534,28,0.108,29,0.148,32,1.515,33,0.008,34,0.008,73,1.256,90,1.956,96,1.784,104,0.407,105,1.413,107,0.994,109,1.907,115,1.717,124,2.648,125,1.784,129,1.972,130,0.886,131,0.852,132,1.907,133,2.27,134,1.35,164,1.456,171,1.797,172,1.515,191,1.515,192,1.302,195,0.894,196,2.362,197,1.515,198,2.362,279,1.797,322,1.707,324,2.343,325,1.932,326,2.006,327,2.257,336,3,340,1.402,341,2.497,344,2.712,345,1.402,346,2.836,348,1.515,350,2.993,352,3.312,353,1.884,354,1.981,355,2.257,358,1.402,360,1.402,361,1.515,364,1.577,370,2.216,371,2.216,373,2.836,374,1.981,376,2.216,378,1.981,437,2.572,438,3.279,556,4.584,1086,3.632,1087,3.051,1088,3.051,1089,3.498,1090,2.362,1091,3.498,1092,3.498,1093,3.498,1094,4.997,1095,3.498,1096,3.704,1097,3.051,1098,3.946,1099,3.498,1100,3.498,1101,3.498,1102,3.051,1103,3.498,1104,3.498,1105,3.498,1106,3.498]],["title/modules/PermissionsModule.html",[35,0.976,53,2.755]],["body/modules/PermissionsModule.html",[2,1.916,3,0.161,4,0.161,5,0.108,7,0.32,8,0.013,13,0.799,28,0.161,29,0.221,33,0.01,34,0.01,35,1.715,37,2.096,38,2.178,39,2.358,40,2.358,41,2.178,42,3.233,43,2.358,53,5.337,58,2.959,59,2.358,60,2.358,62,2.459,64,2.818,65,1.527,130,0.687,267,2.358,387,2.963,389,2.178,625,4.431,631,4.123,1086,5.202,1096,5.007,1097,4.563,1107,4.563,1108,4.563,1109,5.231,1110,5.231,1111,4.563]],["title/injectables/PermissionsService.html",[101,0.771,1096,2.585]],["body/injectables/PermissionsService.html",[3,0.09,4,0.09,5,0.06,7,0.297,8,0.013,13,0.446,28,0.09,29,0.123,30,1.756,31,1.315,33,0.007,34,0.007,65,0.851,72,1.498,73,1.889,74,1.498,75,1.237,90,2.521,96,1.656,101,0.828,102,1.047,104,0.339,105,1.237,107,0.97,109,1.77,124,2.538,129,1.923,130,0.865,131,0.791,132,1.86,133,2.03,134,2.259,164,1.214,191,1.897,192,2.616,195,1.683,203,1.416,210,1.976,267,1.315,282,1.536,288,2.981,289,3.146,313,2.776,322,1.279,324,1.756,325,1.691,326,1.756,327,2.031,336,2.474,340,1.756,341,2.246,344,2.638,345,1.756,348,1.263,355,1.315,358,1.169,360,1.169,392,3.314,401,1.652,403,1.848,404,1.744,405,1.744,411,1.263,414,1.848,415,1.848,416,1.848,417,1.848,418,1.848,419,1.848,420,1.848,421,1.848,422,1.652,423,2.776,424,1.848,425,2.776,427,2.776,428,1.848,430,1.848,431,1.848,432,1.848,433,1.848,434,1.848,435,1.848,436,1.652,437,2.703,438,3.51,443,1.315,444,2.116,556,4.173,559,3.334,560,3.951,592,2.299,635,2.544,640,3.822,642,1.97,689,1.97,822,1.432,841,1.97,1042,2.116,1088,3.822,1090,2.959,1094,4.747,1096,2.776,1098,3.454,1111,2.544,1112,2.544,1113,2.917,1114,2.917,1115,2.917,1116,2.917,1117,2.917,1118,2.917,1119,2.917,1120,2.917,1121,4.382,1122,2.917,1123,2.917,1124,2.917,1125,4.382,1126,2.917,1127,2.917,1128,2.917,1129,2.116,1130,2.544,1131,2.917,1132,4.382,1133,2.917]],["title/interfaces/Response.html",[144,2.585,757,2.585]],["body/interfaces/Response.html",[3,0.149,4,0.149,5,0.1,7,0.302,8,0.013,13,0.739,28,0.192,29,0.204,33,0.01,34,0.01,70,3.267,96,1.649,101,1.18,104,0.562,110,1.262,131,0.872,144,3.956,318,3.149,341,2.159,364,2.181,407,3.51,436,2.741,449,1.885,649,3.51,757,3.065,758,3.814,831,5.45,834,4.53,836,3.51,848,3.814,1134,3.814,1135,5.962,1136,6.598,1137,5.447,1138,5.447,1139,5.447,1140,4.22,1141,4.22,1142,3.51,1143,4.22,1144,4.22,1145,4.22,1146,4.22,1147,4.22,1148,4.22,1149,3.51,1150,4.22,1151,4.22,1152,4.22,1153,4.22]],["title/controllers/ResumesController.html",[0,1.191,1154,2.96]],["body/controllers/ResumesController.html",[0,0.972,2,0.972,3,0.102,4,0.102,5,0.069,7,0.295,8,0.013,9,2.792,13,0.509,28,0.102,29,0.141,32,1.441,33,0.007,34,0.007,73,1.195,90,1.902,96,1.825,104,0.387,105,1.364,107,1.017,109,1.951,110,1.038,115,1.634,124,2.707,125,1.825,129,2.017,130,0.907,131,0.872,132,1.951,133,2.296,134,1.285,164,1.386,171,1.71,172,1.441,191,1.441,192,1.239,195,0.851,196,2.248,197,1.441,198,2.248,322,1.41,324,2.279,325,1.865,326,1.936,327,2.195,336,2.933,340,1.334,341,2.478,344,2.667,345,1.334,346,2.737,348,1.441,350,2.888,352,2.737,353,1.793,354,1.886,355,2.178,358,1.334,360,1.334,361,1.441,364,1.501,367,2.248,370,2.109,371,2.109,373,2.737,374,1.886,376,2.109,378,1.886,437,2.482,438,3.204,565,3.399,579,3.952,1090,2.248,1102,2.904,1154,3.505,1155,2.904,1156,2.904,1157,4.831,1158,3.329,1159,4.831,1160,3.329,1161,2.904,1162,3.329,1163,3.329,1164,3.329,1165,3.329,1166,4.931,1167,3.329,1168,3.602,1169,2.904,1170,3.808,1171,3.329,1172,3.329,1173,3.329,1174,3.329,1175,3.329,1176,3.329,1177,3.329,1178,3.329,1179,3.329]],["title/modules/ResumesModule.html",[35,0.976,54,2.755]],["body/modules/ResumesModule.html",[2,1.871,3,0.155,4,0.155,5,0.104,7,0.324,8,0.013,13,0.77,28,0.155,29,0.213,33,0.01,34,0.01,35,1.685,37,2.02,38,2.098,39,2.272,40,2.272,41,2.098,42,3.178,43,3.178,54,5.371,58,2.89,59,2.272,60,2.272,62,2.369,64,2.715,65,1.471,75,1.81,130,0.661,387,2.855,389,2.098,1154,5.113,1168,5.25,1169,4.397,1180,4.397,1181,4.397,1182,4.397,1183,5.04,1184,5.04,1185,3.193,1186,4.65,1187,4.397,1188,5.04]],["title/injectables/ResumesService.html",[101,0.771,1168,2.585]],["body/injectables/ResumesService.html",[3,0.084,4,0.084,5,0.056,7,0.284,8,0.013,13,0.415,28,0.084,29,0.115,30,1.665,31,1.226,33,0.006,34,0.006,65,0.794,72,1.397,73,1.81,74,1.397,75,0.768,90,2.482,96,1.694,101,0.785,102,0.976,104,0.316,105,1.173,107,0.982,109,1.81,124,2.602,129,1.947,130,0.925,131,0.809,132,1.883,133,2.031,134,2.179,164,1.132,191,2.634,192,2.101,195,1.704,197,1.178,203,1.63,210,1.874,282,1.775,288,3.445,289,3.833,322,1.213,324,1.665,325,1.604,326,1.665,327,1.604,335,3.195,336,2.371,339,4.062,340,1.665,341,2.202,344,2.575,345,1.665,348,1.799,355,1.226,358,1.09,360,1.09,392,3.198,401,1.541,403,1.723,404,1.626,405,1.626,411,1.178,414,1.723,415,1.723,416,1.723,417,1.723,418,2.633,419,1.723,420,1.723,421,1.723,422,2.857,423,3.195,424,1.723,425,2.633,427,2.633,428,1.723,430,1.723,431,1.723,432,1.723,433,1.723,434,1.723,435,1.723,436,1.541,437,1.397,438,1.397,443,1.874,459,1.799,565,3.014,568,1.973,569,1.973,570,3.658,572,3.014,579,3.577,781,2.144,822,1.335,1023,3.014,1129,1.973,1161,3.625,1166,4.645,1168,2.633,1170,3.275,1185,1.723,1187,2.372,1189,2.372,1190,4.155,1191,2.72,1192,2.72,1193,4.155,1194,2.72,1195,4.155,1196,2.72,1197,4.155,1198,2.72,1199,2.72,1200,2.72,1201,2.72,1202,2.72,1203,1.973,1204,2.72,1205,2.72,1206,4.155,1207,3.625,1208,2.354,1209,2.72,1210,4.155,1211,2.72,1212,4.155,1213,2.72,1214,2.72,1215,2.72,1216,2.72,1217,2.372,1218,3.275]],["title/controllers/RolesController.html",[0,1.191,1219,2.96]],["body/controllers/RolesController.html",[0,1.028,2,1.028,3,0.108,4,0.108,5,0.073,7,0.3,8,0.013,9,2.882,13,0.538,28,0.108,29,0.149,32,1.526,33,0.008,34,0.008,73,1.265,90,1.964,96,1.789,104,0.41,105,1.421,107,0.997,109,1.912,110,1.072,115,1.73,124,2.652,125,1.789,129,1.977,130,0.889,131,0.854,132,1.912,133,2.272,134,1.36,164,1.467,165,3.162,171,1.81,172,1.526,191,1.526,192,1.311,195,0.9,196,2.379,197,1.526,198,2.379,203,1.139,322,1.469,324,2.352,325,1.943,326,2.017,327,2.266,336,3.01,340,1.412,341,2.444,344,2.719,345,1.412,346,2.851,348,1.526,350,3.008,352,2.851,353,1.898,354,1.996,355,2.269,358,1.412,360,1.412,361,1.526,364,1.588,367,2.379,370,2.232,371,2.232,373,2.851,374,1.996,376,2.232,378,1.996,437,2.585,438,3.289,580,4.462,1090,2.379,1219,3.651,1220,3.073,1221,3.073,1222,3.073,1223,3.523,1224,3.523,1225,3.523,1226,3.523,1227,5.007,1228,3.523,1229,3.073,1230,3.967,1231,3.523,1232,3.523,1233,3.523,1234,3.523,1235,3.523,1236,3.523,1237,3.523]],["title/modules/RolesModule.html",[35,0.976,55,2.585]],["body/modules/RolesModule.html",[2,1.887,3,0.157,4,0.157,5,0.105,7,0.318,8,0.013,13,0.78,28,0.157,29,0.216,33,0.01,34,0.01,35,1.696,37,2.046,38,2.126,39,2.302,40,2.302,41,2.126,42,3.197,43,3.197,55,5.054,58,2.914,59,2.302,60,2.302,62,2.401,64,2.751,65,1.491,130,0.67,165,4.472,283,1.9,387,2.893,389,2.126,628,4.095,632,3.704,1219,5.145,1229,4.455,1238,4.455,1239,4.455,1240,4.455,1241,5.107,1242,5.107,1243,4.455]],["title/injectables/RolesService.html",[101,0.771,165,2.198]],["body/injectables/RolesService.html",[3,0.083,4,0.083,5,0.056,7,0.291,8,0.013,13,0.413,28,0.083,29,0.114,30,1.656,31,1.218,33,0.006,34,0.006,35,0.646,65,0.788,72,1.387,73,1.802,74,1.387,75,1.167,90,2.56,96,1.601,101,0.781,102,0.969,104,0.314,105,1.167,107,0.941,109,1.712,110,0.917,124,2.488,129,1.867,130,0.923,131,0.765,132,1.805,133,1.986,134,2.34,164,1.124,165,2.226,191,1.79,192,2.476,195,1.7,203,1.818,210,2.883,279,1.387,282,1.466,283,1.868,288,2.844,289,3.001,313,4.051,322,1.207,324,1.656,325,1.595,326,1.656,327,1.595,336,2.36,340,1.656,341,1.997,344,2.716,345,1.656,348,1.79,355,1.218,358,1.082,360,1.082,392,3.187,401,1.53,403,1.711,404,1.614,405,1.614,411,1.169,414,1.711,415,1.711,416,1.711,417,1.711,418,1.711,419,1.711,420,1.711,421,1.711,422,3.622,423,2.618,424,1.711,425,2.618,427,2.618,428,1.711,430,1.711,431,1.711,432,1.711,433,1.711,434,1.711,435,1.711,436,1.53,437,2.579,438,3.418,443,1.218,444,1.959,559,1.711,560,1.824,580,4.051,592,2.129,637,3.258,643,1.711,676,2.356,689,2.791,822,1.326,841,1.824,1023,1.959,1042,2.998,1090,2.791,1129,1.959,1130,4.38,1218,2.129,1222,3.606,1227,4.635,1230,3.258,1243,2.356,1244,2.356,1245,2.701,1246,2.701,1247,2.701,1248,2.701,1249,2.701,1250,2.701,1251,2.701,1252,2.701,1253,2.701,1254,5.625,1255,3.606,1256,2.701,1257,5.021,1258,2.701,1259,2.701,1260,5.021,1261,2.701,1262,2.701,1263,4.133,1264,2.701,1265,2.701]],["title/controllers/SubscribersController.html",[0,1.191,1266,2.96]],["body/controllers/SubscribersController.html",[0,1.132,2,1.132,3,0.119,4,0.119,5,0.08,7,0.308,8,0.013,9,2.643,13,0.592,28,0.119,29,0.164,32,1.679,33,0.008,34,0.008,73,1.392,96,1.854,104,0.451,105,1.52,107,1.033,109,1.982,110,1.408,115,1.903,124,2.315,125,1.854,129,1.95,130,0.877,131,0.843,132,1.886,133,2.103,164,1.614,171,1.991,172,1.679,208,3.056,322,1.805,324,2.677,325,2.078,326,2.157,327,2.387,340,1.553,344,2.804,345,1.553,346,3.049,348,1.679,350,3.218,352,3.503,353,2.088,354,2.196,358,1.553,360,1.553,361,1.679,364,1.748,373,3.049,374,2.196,376,2.456,378,2.196,593,4.602,1266,3.905,1267,3.382,1268,3.382,1269,3.382,1270,3.877,1271,3.877,1272,3.877,1273,3.877,1274,3.877,1275,5.13,1276,3.877,1277,3.918,1278,3.382,1279,4.243,1280,4.243,1281,3.877,1282,3.877,1283,3.877,1284,3.877,1285,3.877,1286,3.877,1287,3.877]],["title/modules/SubscribersModule.html",[35,0.976,56,2.755]],["body/modules/SubscribersModule.html",[2,1.9,3,0.159,4,0.159,5,0.107,7,0.326,8,0.013,13,0.788,28,0.159,29,0.218,33,0.01,34,0.01,35,1.704,37,2.068,38,2.149,39,2.327,40,2.327,41,2.149,42,3.213,43,2.327,56,5.319,58,2.934,59,2.327,60,2.327,62,2.426,64,2.78,65,1.507,130,0.677,387,2.924,389,2.149,1266,5.17,1277,4.99,1278,4.502,1288,4.502,1289,4.502,1290,5.161,1291,5.161,1292,5.161,1293,5.161,1294,3.485,1295,4.72,1296,4.502,1297,5.161]],["title/injectables/SubscribersService.html",[101,0.771,1277,2.585]],["body/injectables/SubscribersService.html",[3,0.118,4,0.118,5,0.079,7,0.307,8,0.013,13,0.585,28,0.118,29,0.162,30,2.139,31,1.727,33,0.008,34,0.008,65,1.118,72,1.968,73,1.375,74,1.968,75,1.081,90,2.056,96,1.846,101,1.009,102,1.375,104,0.445,105,1.507,107,1.065,109,2.096,110,1.213,124,2.303,129,2.04,130,0.917,131,0.882,132,1.973,133,1.876,134,1.479,164,1.595,192,1.425,282,1.794,288,2.17,322,1.558,324,2.663,325,2.061,326,2.139,327,2.061,340,2.139,341,2.403,344,2.794,345,2.139,348,2.311,358,1.535,360,1.535,392,3.765,401,2.17,498,2.29,593,4.427,753,5.798,755,3.342,756,3.342,1268,3.342,1269,4.657,1275,5.015,1277,3.382,1279,4.208,1294,4.488,1296,3.342,1298,3.342,1299,3.831,1300,3.831,1301,5.338,1302,3.831,1303,3.831,1304,3.831,1305,3.831,1306,3.831,1307,2.779,1308,3.831,1309,3.831,1310,3.831,1311,3.831]],["title/injectables/TransformInterceptor.html",[101,0.771,1142,2.96]],["body/injectables/TransformInterceptor.html",[3,0.144,4,0.144,5,0.097,7,0.298,8,0.013,13,0.716,28,0.188,29,0.198,30,1.878,33,0.009,34,0.009,70,3.164,96,1.615,101,1.156,102,1.682,104,0.545,105,1.726,107,0.9,109,1.323,110,0.855,129,1.785,130,0.803,131,0.771,132,1.726,144,2.968,318,2.546,341,1.463,364,2.113,407,3.399,436,2.654,649,3.399,757,2.968,830,4.087,831,6.052,834,5.236,836,4.437,848,3.693,1134,3.693,1135,4.821,1136,5.335,1137,5.335,1138,6.296,1139,5.939,1140,4.087,1141,4.087,1142,4.437,1143,5.939,1144,5.939,1145,4.087,1146,4.087,1147,4.087,1148,4.087,1149,3.399,1150,4.087,1151,4.087,1152,4.087,1153,4.087,1312,4.685,1313,4.685,1314,4.685]],["title/classes/UpdateCompanyDto.html",[29,0.172,349,2.755]],["body/classes/UpdateCompanyDto.html",[3,0.187,4,0.187,5,0.125,7,0.297,8,0.013,28,0.187,29,0.256,33,0.011,34,0.011,322,1.772,329,3.845,349,4.852,359,4.784,447,1.551,529,4.784,826,3.378,1315,5.294,1316,7.185,1317,3.438,1318,3.269,1319,3.269]],["title/classes/UpdateFileDto.html",[29,0.172,699,2.755]],["body/classes/UpdateFileDto.html",[3,0.187,4,0.187,5,0.125,7,0.297,8,0.013,28,0.187,29,0.256,33,0.011,34,0.011,322,1.772,447,1.551,537,3.845,539,4.784,699,4.852,714,4.784,826,3.378,1317,3.438,1318,3.269,1319,3.269,1320,5.294,1321,7.185]],["title/classes/UpdateJobDto.html",[29,0.172,769,2.755]],["body/classes/UpdateJobDto.html",[3,0.187,4,0.187,5,0.125,7,0.297,8,0.013,28,0.187,29,0.256,33,0.011,34,0.011,322,1.772,447,1.551,480,4.403,494,3.628,769,4.852,774,4.784,826,3.378,1317,3.438,1318,3.269,1319,3.269,1322,5.294,1323,7.185]],["title/classes/UpdatePermissionDto.html",[29,0.172,1094,2.755]],["body/classes/UpdatePermissionDto.html",[3,0.187,4,0.187,5,0.125,7,0.297,8,0.013,28,0.187,29,0.256,33,0.011,34,0.011,322,1.772,447,1.551,556,3.845,558,4.784,826,3.378,1094,4.852,1098,4.784,1317,3.438,1318,3.269,1319,3.269,1324,5.294,1325,7.185]],["title/classes/UpdateResumeDto.html",[29,0.172,1166,2.755]],["body/classes/UpdateResumeDto.html",[3,0.187,4,0.187,5,0.125,7,0.297,8,0.013,28,0.187,29,0.256,33,0.011,34,0.011,322,1.772,447,1.551,565,3.628,567,4.403,826,3.378,1166,4.852,1170,4.784,1317,3.438,1318,3.269,1319,3.269,1326,5.294,1327,7.185]],["title/classes/UpdateRoleDto.html",[29,0.172,1227,2.755]],["body/classes/UpdateRoleDto.html",[3,0.187,4,0.187,5,0.125,7,0.297,8,0.013,28,0.187,29,0.256,33,0.011,34,0.011,322,1.772,447,1.551,580,3.845,582,4.784,826,3.378,1227,4.852,1230,4.784,1317,3.438,1318,3.269,1319,3.269,1328,5.294,1329,7.185]],["title/classes/UpdateSubscriberDto.html",[29,0.172,1275,2.755]],["body/classes/UpdateSubscriberDto.html",[3,0.187,4,0.187,5,0.125,7,0.297,8,0.013,28,0.187,29,0.256,33,0.011,34,0.011,322,1.772,447,1.551,593,3.845,595,4.784,826,3.378,1275,4.852,1279,4.784,1317,3.438,1318,3.269,1319,3.269,1330,5.294,1331,7.185]],["title/classes/UpdateUserDto.html",[29,0.172,1332,2.755]],["body/classes/UpdateUserDto.html",[3,0.179,4,0.179,5,0.12,7,0.289,8,0.013,28,0.179,29,0.245,33,0.011,34,0.011,104,0.676,107,0.856,131,0.733,175,4.217,195,1.92,322,1.697,341,2.187,447,1.485,449,2.114,509,3.926,514,3.293,826,3.292,1317,3.293,1318,3.132,1319,3.132,1332,4.729,1333,6.108,1334,7.002,1335,5.814]],["title/classes/UserLoginDto.html",[29,0.172,173,2.585]],["body/classes/UserLoginDto.html",[3,0.118,4,0.118,5,0.079,7,0.289,8,0.013,28,0.189,29,0.295,32,3.134,33,0.008,34,0.008,75,1.507,104,0.445,107,0.786,110,1.422,125,1.41,130,0.806,131,0.838,172,1.659,173,3.382,174,4.149,195,0.979,263,4.149,276,3.765,282,2.246,283,2.286,318,3.307,341,1.667,361,1.659,366,4.821,384,2.303,447,0.979,449,1.612,450,3.024,451,2.17,456,2.17,459,2.311,477,2.223,481,3.9,485,2.29,487,2.621,488,2.876,489,2.876,490,3.31,491,2.876,492,1.881,493,3.191,495,3.469,509,2.587,512,4.843,513,3.191,514,2.17,515,3.019,516,2.779,517,3.019,518,2.779,519,3.019,520,3.019,521,2.779,522,2.587,523,3.382,524,3.382,525,3.019,526,2.779,527,4.208,1336,5.338,1337,5.338,1338,3.831,1339,3.831]],["title/controllers/UsersController.html",[0,1.191,1340,2.96]],["body/controllers/UsersController.html",[0,0.957,2,0.957,3,0.147,4,0.101,5,0.068,7,0.301,8,0.013,9,2.767,12,2.584,13,0.501,19,2.077,21,2.378,26,2.706,28,0.101,29,0.138,32,1.419,33,0.007,34,0.007,73,1.177,90,2.648,96,1.739,104,0.381,105,1.349,107,0.969,109,1.859,110,1.353,115,1.609,124,2.61,125,1.739,129,1.922,130,0.864,131,0.831,132,1.859,133,2.272,134,2.541,171,1.684,172,1.419,175,3.466,191,3.072,192,2.305,194,3.766,195,0.838,197,1.419,246,3.036,276,1.766,322,1.395,324,2.259,325,1.844,326,1.914,327,1.844,334,2.378,335,4.171,336,3.095,339,3.571,340,1.314,341,2.146,342,2.584,344,2.391,345,1.314,346,2.706,352,1.857,353,3.036,354,1.857,355,2.154,358,1.314,360,1.314,361,1.419,364,1.478,367,2.214,370,2.077,371,2.077,373,1.857,374,1.857,378,1.857,514,3.508,898,2.584,1332,4.791,1340,3.466,1341,2.86,1342,2.86,1343,2.86,1344,3.278,1345,3.278,1346,3.278,1347,3.278,1348,2.86,1349,3.278,1350,2.86,1351,2.86,1352,3.278,1353,3.278,1354,3.278,1355,3.278,1356,3.278,1357,3.278,1358,3.278,1359,3.278,1360,3.278,1361,3.278,1362,3.278]],["title/modules/UsersModule.html",[35,0.976,57,2.585]],["body/modules/UsersModule.html",[2,1.802,3,0.146,4,0.146,5,0.098,7,0.324,8,0.013,13,0.726,28,0.146,29,0.201,33,0.009,34,0.009,35,1.64,37,1.905,38,1.98,39,2.144,40,2.144,41,1.98,42,3.091,43,3.091,57,4.972,58,2.784,59,2.144,60,2.144,62,2.235,64,2.561,65,1.388,130,0.81,133,1.342,169,3.748,246,4.428,283,1.769,290,3.748,339,3.012,387,3.498,389,2.571,626,4.169,628,3.912,629,2.842,632,3.449,1340,4.974,1350,4.148,1363,4.148,1364,4.148,1365,4.755,1366,4.755,1367,4.755,1368,4.148,1369,4.755,1370,4.755,1371,4.755,1372,4.755,1373,4.755,1374,4.755]],["title/injectables/UsersService.html",[101,0.771,246,2.198]],["body/injectables/UsersService.html",[3,0.058,4,0.058,5,0.039,7,0.284,8,0.013,13,0.289,28,0.058,29,0.08,30,1.248,31,1.404,33,0.005,34,0.005,65,0.552,72,0.972,73,1.651,74,0.972,75,1.12,90,2.509,96,1.745,101,0.588,102,0.679,104,0.22,105,0.879,107,0.973,109,1.82,110,1.415,121,4.384,124,2.004,129,1.929,130,0.977,131,0.813,132,1.865,133,2.045,134,2.233,175,2.259,191,1.719,192,2.511,195,1.724,203,2.024,208,1.491,210,2.293,246,1.677,265,1.65,267,0.853,268,1.277,273,1.372,276,3.56,282,1.882,283,2.036,288,2.248,289,2.372,313,3.222,322,0.909,324,1.248,325,2.112,326,1.59,327,1.532,334,2.259,335,3.222,336,1.866,339,3.222,340,1.248,344,2.333,345,1.248,355,0.853,358,0.758,360,0.758,384,1.079,392,3.276,401,1.071,402,1.65,403,1.198,404,1.131,405,1.131,411,0.819,414,1.973,415,1.198,416,1.198,417,1.973,418,1.198,419,1.198,420,1.198,421,1.198,422,2.881,423,1.973,424,1.198,425,1.973,427,1.973,428,1.198,430,1.198,431,1.198,432,1.198,433,1.198,434,1.198,435,1.973,436,1.071,437,0.972,438,0.972,440,2.716,443,0.853,444,1.372,450,2.248,451,1.764,456,1.764,514,2.606,522,2.68,523,2.514,524,1.973,629,1.131,636,2.716,637,3.128,643,1.198,644,1.277,647,2.259,652,1.65,668,2.454,689,1.277,822,0.929,841,1.277,1023,2.879,1042,1.372,1129,1.372,1217,3.462,1218,4.009,1255,1.65,1332,3.434,1343,2.716,1348,2.716,1351,1.65,1368,1.65,1375,1.65,1376,3.114,1377,3.114,1378,3.114,1379,3.114,1380,3.114,1381,1.891,1382,1.891,1383,1.891,1384,1.65,1385,1.891,1386,3.114,1387,1.891,1388,1.891,1389,3.114,1390,1.891,1391,3.114,1392,1.891,1393,3.114,1394,6.043,1395,1.891,1396,1.891,1397,1.891,1398,3.114,1399,1.891,1400,1.891,1401,1.891,1402,1.65,1403,1.891,1404,1.891,1405,3.114,1406,1.891,1407,3.114,1408,1.891,1409,3.114,1410,5.086,1411,3.969,1412,5.086,1413,1.891,1414,3.114,1415,3.114,1416,3.114,1417,3.114,1418,3.114,1419,3.114,1420,3.114,1421,3.114,1422,3.114,1423,3.114,1424,1.891,1425,1.891,1426,1.891,1427,1.891,1428,1.891,1429,1.891,1430,1.891,1431,3.114,1432,3.969,1433,1.891,1434,1.891,1435,1.891,1436,1.891,1437,1.891,1438,1.891,1439,1.891,1440,1.891,1441,1.891,1442,1.891,1443,1.891,1444,1.891,1445,1.891,1446,1.891]],["title/coverage.html",[1447,4.864]],["body/coverage.html",[0,2.076,1,1.658,5,0.075,6,1.994,8,0.013,14,1.448,19,1.448,22,1.295,24,1.543,26,1.295,29,0.337,33,0.006,34,0.006,41,0.951,101,1.436,103,1.994,113,1.658,114,1.994,124,0.792,131,0.819,133,1.024,144,1.448,160,1.448,165,1.231,173,1.448,174,3.047,210,1.03,223,1.543,224,1.543,241,1.994,246,1.231,267,1.03,283,0.85,319,1.658,320,1.994,329,1.448,349,1.543,356,1.448,384,1.563,385,1.658,390,1.994,400,1.658,448,3.274,479,2.86,480,3.274,493,1.366,494,1.366,509,3.47,514,1.295,528,1.994,529,2.86,537,1.448,538,1.994,539,2.86,556,1.448,557,1.994,558,2.86,565,1.366,566,2.86,567,3.274,579,1.448,580,1.448,581,1.994,582,2.86,593,1.448,594,1.994,595,2.86,615,1.658,616,1.994,618,1.448,625,1.543,626,1.543,628,1.448,633,1.994,642,1.543,643,1.448,644,1.543,645,1.801,646,1.801,647,1.658,664,6.716,691,1.994,692,1.658,693,1.994,699,1.543,712,1.448,742,1.658,746,1.994,757,2.299,759,1.994,760,1.658,761,1.994,769,1.543,772,1.448,788,1.231,789,1.658,792,1.994,801,1.658,824,1.994,825,2.86,843,1.801,844,1.801,867,1.994,898,1.801,900,1.994,909,1.658,910,1.994,919,1.448,1006,1.994,1007,1.994,1086,1.658,1087,1.994,1094,1.543,1096,1.448,1112,1.994,1134,2.86,1142,1.658,1149,1.658,1154,1.658,1155,1.994,1166,1.543,1168,1.448,1185,1.448,1186,1.658,1189,1.994,1203,1.658,1219,1.658,1220,1.994,1227,1.543,1244,1.994,1266,1.658,1267,1.994,1275,1.543,1277,1.448,1280,1.801,1294,1.543,1295,1.658,1298,1.994,1307,1.658,1315,1.994,1320,1.994,1322,1.994,1324,1.994,1326,1.994,1328,1.994,1330,1.994,1332,1.543,1333,1.994,1340,1.658,1341,1.994,1375,1.994,1447,1.994,1448,2.285,1449,2.285,1450,2.285,1451,8.203,1452,3.629,1453,4.513,1454,6.489,1455,5.605,1456,5.115,1457,3.629,1458,7.538,1459,6.685,1460,5.605,1461,6.255,1462,3.937,1463,6.489,1464,2.285,1465,3.274,1466,2.285,1467,1.994,1468,3.629,1469,3.274,1470,3.274,1471,2.285,1472,3.274,1473,3.274,1474,2.285,1475,3.274,1476,2.285,1477,2.285,1478,2.285]],["title/dependencies.html",[38,2.044,1479,2.969]],["body/dependencies.html",[8,0.013,13,0.758,17,2.811,33,0.01,34,0.01,38,2.066,65,1.449,70,3.351,72,2.549,73,1.781,74,2.549,75,1.792,163,2.966,169,3.911,172,2.149,227,3.144,230,3.911,232,3.911,355,2.237,404,2.966,405,2.966,407,3.6,716,3.6,876,5.516,877,4.329,905,4.329,922,3.6,923,3.911,926,3.911,1022,4.329,1318,2.673,1319,2.673,1402,4.329,1480,4.962,1481,6.998,1482,4.962,1483,4.962,1484,4.962,1485,4.962,1486,4.962,1487,4.962,1488,4.962,1489,4.962,1490,4.962,1491,4.962,1492,4.962,1493,4.962,1494,4.962,1495,4.962,1496,4.962,1497,4.962,1498,4.962,1499,4.962,1500,4.962,1501,4.962,1502,4.962,1503,4.962,1504,4.962,1505,4.962,1506,4.962,1507,4.962,1508,4.962,1509,4.962,1510,4.962,1511,4.962,1512,4.962,1513,4.962,1514,4.962]],["title/miscellaneous/functions.html",[1515,2.156,1516,4.282]],["body/miscellaneous/functions.html",[8,0.012,33,0.011,34,0.011,41,3.208,104,0.717,129,1.8,130,0.809,131,0.778,132,1.741,493,4.335,1384,5.379,1456,4.86,1467,5.379,1515,3.906,1516,5.379,1517,6.166,1518,5.379,1519,6.166,1520,7.705]],["title/index.html",[104,0.396,1521,3.403,1522,3.403]],["body/index.html",[8,0.012,33,0.01,34,0.01,422,3.004,508,4.18,516,3.847,922,3.847,966,4.626,968,5.774,970,4.626,1523,6.619,1524,5.303,1525,5.303,1526,6.619,1527,6.619,1528,6.619,1529,5.303,1530,5.303,1531,6.619,1532,5.303,1533,6.619,1534,6.619,1535,6.619,1536,5.303,1537,5.303,1538,6.619,1539,6.619,1540,6.918,1541,6.918,1542,5.303,1543,5.303,1544,5.303,1545,5.303,1546,5.303,1547,5.303,1548,5.303,1549,5.303,1550,5.303,1551,5.303,1552,5.303,1553,4.626,1554,5.303,1555,5.303,1556,5.303,1557,5.303,1558,5.303,1559,5.303,1560,5.303,1561,5.303,1562,5.303]],["title/classes/job.html",[29,0.172,788,2.198]],["body/classes/job.html",[3,0.098,4,0.098,5,0.066,7,0.193,8,0.013,28,0.17,29,0.134,33,0.007,34,0.007,65,0.927,75,1.318,100,1.182,104,0.369,107,1.18,110,1.437,125,2.117,130,0.801,131,1.042,195,1.559,197,2.396,203,1.026,282,1.615,341,1.905,384,1.917,389,1.943,411,2.396,443,2.495,447,0.811,449,1.409,452,3.135,453,2.843,454,3.135,455,2.012,457,4.994,459,3.238,461,3.456,462,3.647,463,4.308,468,3.134,474,1.898,475,2.644,476,1.898,477,2.54,498,3.308,499,3.506,500,3.737,501,4.015,502,4.015,503,3.308,505,4.015,507,4.015,788,2.514,789,2.304,801,2.304,822,2.717,1208,3.135,1465,2.304,1563,3.176,1564,3.176,1565,3.176,1566,3.176,1567,3.176,1568,3.176,1569,3.176,1570,3.176,1571,3.176,1572,3.176,1573,3.176,1574,3.176,1575,3.176,1576,3.176,1577,3.176,1578,3.176,1579,3.176,1580,3.176,1581,2.77]],["title/modules.html",[37,2.234]],["body/modules.html",[8,0.01,33,0.01,34,0.01,36,3.978,37,2.197,47,3.703,48,3.703,49,3.703,50,3.703,51,3.703,52,3.703,53,3.703,54,3.703,55,3.474,56,3.703,57,3.474,1582,8.38,1583,8.38,1584,8.38,1585,8.38]],["title/overview.html",[1586,4.864]],["body/overview.html",[2,1.065,8,0.013,14,3.792,22,4.15,33,0.008,34,0.008,35,0.873,36,6.057,37,1.462,38,1.52,39,1.646,40,1.646,41,1.52,42,1.646,43,1.646,44,3.184,45,3.184,46,3.184,47,5.4,48,4.635,49,4.947,50,4.635,51,4.635,52,4.635,53,4.635,54,4.812,55,4.641,56,4.635,57,4.641,58,2.326,59,1.646,60,1.646,102,1.31,165,3.946,219,3.184,221,3.184,222,3.184,223,4.042,224,4.042,246,4.031,356,3.792,380,3.184,381,3.184,447,0.932,508,2.877,618,3.792,621,3.184,622,3.184,712,3.792,737,3.184,738,3.184,758,2.877,772,3.792,784,3.184,785,3.184,919,3.792,981,3.184,982,3.184,1096,3.792,1107,3.184,1108,3.184,1168,4.641,1180,3.184,1181,3.184,1182,3.184,1238,3.184,1239,3.184,1240,3.184,1277,3.792,1288,3.184,1289,3.184,1363,3.184,1364,3.184,1586,3.184,1587,5.16,1588,3.65,1589,3.65]],["title/classes/permission.html",[29,0.172,267,1.839]],["body/classes/permission.html",[3,0.115,4,0.115,5,0.077,7,0.272,8,0.013,28,0.187,29,0.158,33,0.008,34,0.008,35,1.452,65,1.094,75,1.484,100,1.395,104,0.436,107,1.154,110,1.431,125,2.071,130,0.797,131,1.033,195,1.552,197,2.63,203,1.212,267,2.371,282,1.773,384,1.299,389,2.189,411,2.63,443,2.738,447,0.958,449,1.588,452,3.441,454,3.441,457,4.93,459,3.112,461,3.441,462,3.631,463,4.297,468,2.701,474,2.241,475,2.979,476,2.241,477,2.529,559,3.848,560,4.101,625,2.532,642,2.532,788,2.019,822,2.982,1208,3.441,1469,2.72,1590,3.749,1591,3.749,1592,3.749,1593,3.749,1594,3.749,1595,3.749,1596,3.749,1597,3.749,1598,3.749,1599,3.749,1600,3.749,1601,2.955,1602,2.955,1603,3.27]],["title/properties.html",[449,1.482,1479,2.969]],["body/properties.html",[8,0.013,33,0.011,34,0.011,449,1.91,453,3.25,1540,5.52,1541,5.52,1553,5.52,1604,6.328,1605,6.328,1606,6.328,1607,6.328,1608,6.328]],["title/classes/resume.html",[29,0.172,1185,2.585]],["body/classes/resume.html",[3,0.101,4,0.101,5,0.068,7,0.256,8,0.013,28,0.174,29,0.139,33,0.007,34,0.007,65,0.96,75,1.352,100,1.224,104,0.382,107,1.157,110,1.394,125,2.076,131,1.041,195,1.585,197,2.445,203,1.063,282,2.073,384,1.14,388,2.869,389,1.994,411,2.445,443,2.797,447,0.84,449,1.446,452,3.199,454,3.199,457,4.905,459,3.075,461,3.514,462,4.113,463,4.113,468,2.46,474,1.966,475,2.713,476,1.966,477,3.216,568,4.097,569,4.097,570,4.5,571,4.451,572,4.097,788,1.772,791,2.869,822,2.772,1185,3.034,1186,2.386,1203,2.386,1207,4.926,1208,3.514,1470,2.386,1601,2.593,1602,2.593,1609,5.197,1610,4.89,1611,3.289,1612,3.289,1613,3.289,1614,3.289,1615,3.289,1616,3.289,1617,3.289,1618,3.289,1619,3.289,1620,3.289,1621,3.289,1622,3.289,1623,3.289,1624,3.289,1625,3.289,1626,2.869]],["title/classes/role.html",[29,0.172,283,1.518]],["body/classes/role.html",[3,0.113,4,0.113,5,0.075,7,0.284,8,0.013,28,0.184,29,0.154,33,0.008,34,0.008,65,1.067,75,1.459,100,1.361,104,0.425,107,1.149,110,1.338,125,2.061,130,0.786,131,1.034,195,1.531,197,2.595,203,1.182,267,2.702,268,2.469,279,3.078,282,1.749,283,1.923,384,1.267,389,2.151,411,2.595,443,2.702,447,0.934,449,1.56,452,3.394,453,3.078,454,3.394,457,4.899,459,3.087,461,3.394,462,3.892,463,4.262,468,3.345,474,2.186,475,2.927,476,2.186,477,2.711,503,3.582,628,2.317,631,2.882,643,2.317,788,1.97,822,2.942,1208,3.394,1472,2.653,1601,2.882,1602,2.882,1609,4.073,1610,4.073,1627,3.657,1628,3.657,1629,3.657,1630,3.657,1631,3.657,1632,3.657,1633,3.657,1634,3.657,1635,3.657,1636,3.657,1637,3.657,1638,3.19]],["title/classes/subscriber.html",[29,0.172,1294,2.755]],["body/classes/subscriber.html",[3,0.12,4,0.12,5,0.08,7,0.256,8,0.013,28,0.191,29,0.164,33,0.008,34,0.008,65,1.136,75,1.524,100,2.775,104,0.452,107,1.137,110,1.362,125,2.039,131,1.029,195,1.583,197,2.683,203,1.258,282,2.123,283,1.448,389,2.247,411,2.683,443,2.794,447,0.995,449,1.63,452,3.51,454,3.51,457,4.827,459,3.149,461,3.51,462,3.704,463,4.348,468,2.773,474,2.327,475,3.058,476,2.327,477,2.58,495,2.434,498,3.704,629,2.327,822,3.042,1208,3.51,1294,3.645,1295,2.824,1307,2.824,1473,2.824,1639,3.892,1640,3.892,1641,3.892,1642,3.892,1643,4.709,1644,4.709,1645,3.892,1646,3.892,1647,3.892,1648,3.892,1649,3.892,1650,3.395]],["title/miscellaneous/typealiases.html",[1515,2.156,1651,4.909]],["body/miscellaneous/typealiases.html",[8,0.011,33,0.011,34,0.011,104,0.68,131,0.738,400,5.098,448,4.243,475,4.651,642,4.746,643,4.452,644,4.746,801,5.098,1203,5.098,1307,5.098,1465,4.243,1469,4.243,1470,4.243,1472,4.243,1473,4.243,1475,4.243,1515,3.705,1652,5.849,1653,5.102,1654,5.102,1655,5.102,1656,5.102,1657,5.102,1658,5.102,1659,5.102]],["title/classes/user.html",[29,0.172,133,1.152]],["body/classes/user.html",[3,0.096,4,0.096,5,0.064,7,0.227,8,0.013,28,0.169,29,0.132,33,0.007,34,0.007,65,0.912,75,1.302,100,2.6,104,0.363,107,1.171,110,1.443,121,3.977,125,2.1,130,0.794,131,1.04,133,1.302,195,1.546,197,2.374,203,1.01,276,2.953,282,1.972,283,2.252,341,1.89,384,1.899,389,1.92,411,2.374,443,2.472,447,0.798,449,1.392,450,3.105,452,3.105,454,3.105,457,4.941,459,2.925,461,3.429,462,3.859,463,4.288,468,2.369,474,1.868,475,2.613,476,1.868,477,2.909,495,2.079,522,3.702,523,3.473,524,3.473,626,2.11,629,1.868,632,2.266,644,2.11,822,2.691,1208,3.105,1475,2.266,1609,3.635,1610,3.635,1643,4.023,1644,4.023,1660,3.124,1661,3.124,1662,3.124,1663,3.124,1664,3.124,1665,3.124,1666,3.124,1667,3.124,1668,3.124,1669,3.124,1670,3.124,1671,3.124,1672,3.124,1673,3.124,1674,3.124,1675,3.124,1676,3.124,1677,2.725]],["title/miscellaneous/variables.html",[1515,2.156,1678,4.282]],["body/miscellaneous/variables.html",[5,0.025,8,0.013,9,2.428,11,0.882,26,1.211,33,0.003,34,0.003,35,1.77,73,2.016,96,0.321,100,0.795,104,0.141,110,0.788,116,0.959,130,0.972,131,0.544,133,1.53,134,0.469,160,1.354,195,2.055,197,3.206,203,0.393,267,2.23,279,2.012,281,6.458,282,2.161,283,0.795,309,4.9,312,5.371,318,0.89,321,3.417,322,1.26,327,1.666,335,1.811,344,1.666,353,2.325,384,1.357,385,1.55,411,3.206,448,0.882,452,4.194,454,4.194,478,1.061,559,4.69,560,4.999,625,1.443,626,1.443,628,1.354,645,1.685,646,1.685,647,1.55,664,5.836,668,0.959,694,0.959,762,3.765,788,2.11,789,1.55,834,0.882,843,1.685,844,1.685,845,0.882,846,1.061,1016,5.618,1017,5.618,1135,0.959,1149,2.074,1156,3.765,1185,2.481,1186,1.55,1208,4.194,1221,3.417,1280,1.685,1295,1.55,1342,3.417,1456,0.959,1462,1.061,1465,0.882,1469,0.882,1470,0.882,1472,0.882,1473,0.882,1475,0.882,1515,0.771,1518,4.061,1581,1.061,1603,1.061,1626,1.061,1638,1.061,1650,1.061,1653,1.061,1654,1.061,1655,1.061,1656,1.061,1657,1.061,1658,1.061,1659,1.061,1677,1.061,1678,1.061,1679,2.859,1680,1.216,1681,2.859,1682,7.403,1683,7.403,1684,8.043,1685,8.043,1686,2.137,1687,7.403,1688,1.216,1689,2.137,1690,2.137,1691,1.216,1692,2.137,1693,2.137,1694,1.216,1695,2.137,1696,1.216,1697,2.137,1698,1.216,1699,2.137,1700,2.137,1701,1.216,1702,2.859,1703,2.137,1704,1.216,1705,1.216,1706,2.137,1707,1.216,1708,2.137,1709,1.216,1710,1.216,1711,2.137,1712,1.216,1713,2.137,1714,2.137,1715,1.216,1716,2.137,1717,1.216,1718,2.859,1719,2.137,1720,1.216,1721,2.137,1722,1.216,1723,2.137,1724,1.216,1725,1.216,1726,1.216,1727,2.137,1728,1.216,1729,2.137,1730,2.137,1731,1.216,1732,2.137,1733,1.216,1734,2.859,1735,2.137,1736,1.216,1737,2.137,1738,1.216,1739,2.137,1740,1.216,1741,1.216,1742,1.216,1743,2.137,1744,1.216,1745,2.137,1746,2.137,1747,1.216,1748,2.137,1749,1.216,1750,2.859,1751,2.137,1752,1.216,1753,2.137,1754,1.216,1755,2.137,1756,1.216,1757,2.137,1758,2.137,1759,1.216,1760,2.137,1761,1.216,1762,2.859,1763,2.137,1764,1.216,1765,2.137,1766,1.216,1767,3.439,1768,1.216,1769,1.216,1770,1.216,1771,1.216,1772,1.216,1773,1.216,1774,1.216,1775,1.216,1776,1.216,1777,1.216,1778,1.216,1779,1.216]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/job.html":{},"modules.html":{},"overview.html":{},"classes/permission.html":{},"properties.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"miscellaneous/typealiases.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1605,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:00:01.123z",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:01:02.234z",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:02:03.345z",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:03:04.456z",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:04:05.567z",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:05:06.678z",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:06:07.789z",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:07:08.890z",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:08:09.901z",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:09:10.012z",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:10:11.123z",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:11:12.234z",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:12:13.345z",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:13:14.456z",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:14:15.567z",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:15:16.678z",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:16:17.789z",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:17:18.890z",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:18:19.901z",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:19:20.012z",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:20:21.123z",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:21:22.234z",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:22:23.345z",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:23:24.456z",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:24:25.567z",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:25:26.678z",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:26:27.789z",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:27:28.890z",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:28:29.901z",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:29:30.012z",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:30:31.123z",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04t08:31:32.234z",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":422,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["1024",{"_index":727,"title":{},"body":{"controllers/FilesController.html":{}}}],["11.0.0",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1587,"title":{},"body":{"overview.html":{}}}],["123",{"_index":979,"title":{},"body":{"controllers/MailController.html":{}}}],["15/03/2025",{"_index":959,"title":{},"body":{"controllers/MailController.html":{}}}],["18",{"_index":1588,"title":{},"body":{"overview.html":{}}}],["2",{"_index":508,"title":{"classes/Company-2.html":{}},"body":{"index.html":{},"overview.html":{}}}],["2.1.3",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{}}}],["2025",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":955,"title":{},"body":{"controllers/MailController.html":{}}}],["28",{"_index":1589,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1374,"title":{},"body":{"modules/UsersModule.html":{}}}],["5.4.0",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["6.9.3",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":1373,"title":{},"body":{"modules/UsersModule.html":{}}}],["647b5188a8a243e8191855b5",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b567",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b568",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b569",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b56a",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b56b",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b56c",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b56d",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b56e",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b56f",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b570",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b571",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b572",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b573",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b574",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b575",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b576",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b577",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b578",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b579",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b57a",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b57b",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b57c",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b57d",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b57e",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b57f",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b580",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b581",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b582",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b583",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b584",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b585",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8d2e4b7c3a9f1e2d4b586",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65f8e9a2b7c3a9f1e2d4b592",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.4",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["7.6.1",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["7039",{"_index":1562,"title":{},"body":{"index.html":{}}}],["8.0.0",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":1001,"title":{},"body":{"modules/MailModule.html":{}}}],["__v",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["aaa",{"_index":366,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["abc",{"_index":947,"title":{},"body":{"controllers/MailController.html":{}}}],["access",{"_index":866,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["access_token",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":753,"title":{},"body":{"injectables/FilesService.html":{},"injectables/SubscribersService.html":{}}}],["actual",{"_index":1151,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["adapter",{"_index":1003,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["addfiletypevalidator",{"_index":722,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":725,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":450,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"classes/user.html":{}}}],["adds",{"_index":754,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["admin@gmail.com",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["admin_role",{"_index":645,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":523,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"classes/user.html":{}}}],["alias",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1652,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["api",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/auth/account",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":559,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"classes/permission.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":512,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":717,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":775,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":927,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1099,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1171,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1231,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1281,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1352,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicationlink",{"_index":974,"title":{},"body":{"controllers/MailController.html":{}}}],["appmodule",{"_index":36,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":14,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":856,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["array",{"_index":589,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["array'})@ismongoid({each",{"_index":588,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["async",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":825,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":832,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":835,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":838,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/decorator/customize",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/passport/jwt",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["auth/passport/local",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":113,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":842,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":827,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":899,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":47,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1608,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":22,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":971,"title":{},"body":{"controllers/MailController.html":{}}}],["badrequestexception",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('can",{"_index":1445,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('email",{"_index":1413,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('invalid",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('not",{"_index":1431,"title":{},"body":{"injectables/UsersService.html":{}}}],["based",{"_index":855,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["basename",{"_index":1082,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcrypt",{"_index":1401,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.comparesync(password",{"_index":1429,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.gensaltsync(10",{"_index":1406,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hashsync(password",{"_index":1408,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":1402,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["body",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":468,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["boolean(ischeck",{"_index":657,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1050,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1585,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1582,"title":{},"body":{"modules.html":{}}}],["build",{"_index":728,"title":{},"body":{"controllers/FilesController.html":{}}}],["byuser",{"_index":1157,"title":{},"body":{"controllers/ResumesController.html":{}}}],["byuser(@user",{"_index":1178,"title":{},"body":{"controllers/ResumesController.html":{}}}],["byuser(user",{"_index":1158,"title":{},"body":{"controllers/ResumesController.html":{}}}],["bước",{"_index":1524,"title":{},"body":{"index.html":{}}}],["bạn",{"_index":1545,"title":{},"body":{"index.html":{}}}],["c",{"_index":1546,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":1138,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":828,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":833,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["candidatename",{"_index":941,"title":{},"body":{"controllers/MailController.html":{}}}],["case",{"_index":1045,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{}}}],["cau",{"_index":1060,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb",{"_index":1068,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1073,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["checkuser",{"_index":1409,"title":{},"body":{"injectables/UsersService.html":{}}}],["chính",{"_index":1551,"title":{},"body":{"index.html":{}}}],["chạy",{"_index":1526,"title":{},"body":{"index.html":{}}}],["class",{"_index":29,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["classes",{"_index":447,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"classes/job.html":{},"overview.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["cluster_appmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":380,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":381,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":621,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":622,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":737,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":738,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":784,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":785,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":981,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":982,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1107,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1108,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1180,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_exports",{"_index":1181,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1182,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1238,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1239,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1240,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1288,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1289,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1363,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1364,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1365,"title":{},"body":{"modules/UsersModule.html":{}}}],["companies",{"_index":321,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":383,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":319,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":48,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":356,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":384,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/JobsService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":529,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":531,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":534,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:16",{"_index":532,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:17",{"_index":536,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":535,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":533,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":388,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/resume.html":{}}}],["companyaddress",{"_index":978,"title":{},"body":{"controllers/MailController.html":{}}}],["companydocument",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":568,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/ResumesService.html":{},"classes/resume.html":{}}}],["companymodel",{"_index":394,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyname",{"_index":944,"title":{},"body":{"controllers/MailController.html":{}}}],["companyschema",{"_index":385,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mail_host",{"_index":992,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('sender_email",{"_index":996,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('sender_password",{"_index":997,"title":{},"body":{"modules/MailModule.html":{}}}],["cong",{"_index":891,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["connection",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["console",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["console.error(error",{"_index":1059,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('abc",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["console.log('adminrole",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["console.log('database",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["console.log('directory",{"_index":1040,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('email",{"_index":1309,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["console.log('filter",{"_index":1426,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('payload",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('req.body",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log('result",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["console.log('test",{"_index":929,"title":{},"body":{"controllers/MailController.html":{}}}],["console.log('updatecompanydto",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["console.log('user",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SubscribersController.html":{},"injectables/UsersService.html":{}}}],["console.log('userrole",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["console.log('xx",{"_index":781,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["console.log(`the",{"_index":653,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["console.log(apipath",{"_index":1124,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["console.log(createcompanydto",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["console.log(error",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["console.log(req.headers",{"_index":1069,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log(result",{"_index":1102,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{}}}],["console.log(temp",{"_index":897,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["const",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":901,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":391,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":870,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":793,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmemodel",{"_index":635,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":830,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1191,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1245,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribemodel",{"_index":1299,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":1381,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["contactemail",{"_index":972,"title":{},"body":{"controllers/MailController.html":{}}}],["contains",{"_index":1054,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":836,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":849,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":848,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":851,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1147,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":620,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":718,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('jobs",{"_index":776,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":928,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1100,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1172,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1232,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1282,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1353,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["countpermission",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":660,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":658,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1447,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":322,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":328,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":747,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":763,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1088,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createresumedto",{"_index":1161,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createroledto",{"_index":1222,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1269,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(result",{"_index":1343,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create1",{"_index":323,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["create1(@body",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["create1(createcompanydto",{"_index":331,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["createcompanydto",{"_index":329,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1041,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["created_at",{"_index":451,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":537,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":494,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createjobdto.company._id",{"_index":815,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.company.logo",{"_index":817,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.company.name",{"_index":816,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.description",{"_index":811,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.enddate",{"_index":813,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.isactive",{"_index":814,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.level",{"_index":810,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.location",{"_index":807,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.name",{"_index":805,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.quantity",{"_index":809,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.salary",{"_index":808,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.skills",{"_index":806,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobdto.startdate",{"_index":812,"title":{},"body":{"injectables/JobsService.html":{}}}],["createmulteroptions",{"_index":1009,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":556,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createpermissiondto.apipath",{"_index":1122,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createpermissiondto.method",{"_index":1123,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createresumedto",{"_index":565,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":580,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":1256,"title":{},"body":{"injectables/RolesService.html":{}}}],["createsubscriberdto",{"_index":593,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createsubscriberdto.skills",{"_index":1311,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createusercvdto",{"_index":579,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":514,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":924,"title":{},"body":{"controllers/MailController.html":{}}}],["cron(cronexpression.every_second",{"_index":917,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":925,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["cv",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cài",{"_index":1529,"title":{},"body":{"index.html":{}}}],["các",{"_index":1523,"title":{},"body":{"index.html":{}}}],["câu",{"_index":1533,"title":{},"body":{"index.html":{}}}],["công",{"_index":945,"title":{},"body":{"controllers/MailController.html":{}}}],["cần",{"_index":1525,"title":{},"body":{"index.html":{}}}],["d",{"_index":1527,"title":{},"body":{"index.html":{}}}],["data",{"_index":1135,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data.result",{"_index":1153,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["databases",{"_index":617,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":624,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":619,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":615,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":49,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":618,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":459,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/ResumesService.html":{},"classes/UserLoginDto.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["date().getfullyear",{"_index":977,"title":{},"body":{"controllers/MailController.html":{}}}],["date.now()}${extname",{"_index":1085,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dau",{"_index":1065,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dc",{"_index":1062,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["deadline",{"_index":958,"title":{},"body":{"controllers/MailController.html":{}}}],["declarations",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/customize",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["decorators",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["default",{"_index":1016,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["defaults",{"_index":998,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["deleta",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":346,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["deleteby",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{}}}],["deletedat",{"_index":452,"title":{},"body":{"classes/Company.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":822,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["denied",{"_index":1058,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":38,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":453,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"classes/job.html":{},"properties.html":{},"classes/role.html":{}}}],["destination",{"_index":1067,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1537,"title":{},"body":{"index.html":{}}}],["diagnostics_channel",{"_index":1293,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["dir",{"_index":1000,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1049,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1021,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dung",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["duoc",{"_index":881,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["duong",{"_index":1026,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["duy",{"_index":519,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dân",{"_index":1541,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dụng",{"_index":964,"title":{},"body":{"controllers/MailController.html":{}}}],["e",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["each",{"_index":496,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["eexist",{"_index":1046,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":506,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["enddate",{"_index":507,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JobsService.html":{},"classes/job.html":{}}}],["enotdir",{"_index":1051,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1010,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1013,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":839,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/MulterConfigService.html":{}}}],["error.code",{"_index":1044,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":729,"title":{},"body":{"controllers/FilesController.html":{}}}],["example",{"_index":527,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["exception",{"_index":854,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exec",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":834,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1042,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["exports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":702,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":826,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1077,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1078,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":874,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":885,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["fanpage",{"_index":1558,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":705,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":714,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":539,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":731,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":715,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":707,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":694,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":740,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":713,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":692,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":50,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":712,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":723,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1084,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1216,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":324,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(current",{"_index":1090,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["findall(limit",{"_index":334,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(page",{"_index":1195,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findall(pagesize",{"_index":765,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["findbyemail",{"_index":1376,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":1386,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyuser",{"_index":1190,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyuser(user",{"_index":1197,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":325,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":340,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduserbyrefeshtoken",{"_index":1377,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyrefeshtoken(refreshtoken",{"_index":1389,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1070,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":840,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception('you",{"_index":865,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["founduser",{"_index":1442,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.name",{"_index":1444,"title":{},"body":{"injectables/UsersService.html":{}}}],["frontend",{"_index":969,"title":{},"body":{"controllers/MailController.html":{}}}],["fs",{"_index":1020,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1038,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{}}}],["function",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1516,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":524,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"classes/user.html":{}}}],["get(':id",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["get('account",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('profile",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public",{"_index":337,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["get()@public()@responsemessage('mail",{"_index":914,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@render('index",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount(@user",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount(user",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethashedpassword",{"_index":1378,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethashedpassword(password",{"_index":1391,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":106,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{}}}],["getprofile",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@req",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["getrootpath",{"_index":1008,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getting",{"_index":1521,"title":{"index.html":{}},"body":{}}],["gi",{"_index":1539,"title":{},"body":{"index.html":{}}}],["giai",{"_index":879,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["h",{"_index":953,"title":{},"body":{"controllers/MailController.html":{}}}],["ham",{"_index":894,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["handlebars",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":985,"title":{},"body":{"modules/MailModule.html":{}}}],["handlerefresh",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlerefresh(refreshtoken",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlerequest",{"_index":829,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":837,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":1407,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashedpassword",{"_index":1394,"title":{},"body":{"injectables/UsersService.html":{}}}],["hello",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["hierarchy",{"_index":1053,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hiinh",{"_index":1061,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":1207,"title":{},"body":{"injectables/ResumesService.html":{},"classes/resume.html":{}}}],["hn",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["host",{"_index":991,"title":{},"body":{"modules/MailModule.html":{}}}],["hr@abc.com",{"_index":973,"title":{},"body":{"controllers/MailController.html":{}}}],["httponly",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://abc.com/apply",{"_index":975,"title":{},"body":{"controllers/MailController.html":{}}}],["https://hoidanit.com.vn",{"_index":1553,"title":{},"body":{"index.html":{},"properties.html":{}}}],["https://www.facebook.com/askitwitheric",{"_index":1559,"title":{},"body":{"index.html":{}}}],["https://www.tiktok.com/@hoidanit",{"_index":1557,"title":{},"body":{"index.html":{}}}],["https://www.udemy.com/user/eric",{"_index":1561,"title":{},"body":{"index.html":{}}}],["https://www.youtube.com/@hoidanit",{"_index":1555,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":711,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":730,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":475,"title":{},"body":{"classes/Company.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"miscellaneous/typealiases.html":{},"classes/user.html":{}}}],["hỏi",{"_index":1540,"title":{},"body":{"index.html":{},"properties.html":{}}}],["id",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":886,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1076,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1080,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":649,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["incorrect",{"_index":908,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["index",{"_index":104,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"miscellaneous/typealiases.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["info._id",{"_index":1355,"title":{},"body":{"controllers/UsersController.html":{}}}],["info.createdat",{"_index":1356,"title":{},"body":{"controllers/UsersController.html":{}}}],["init_permissions",{"_index":646,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialized",{"_index":654,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["initializedaaaaaa",{"_index":690,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["inject",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":101,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(jobm.name",{"_index":803,"title":{},"body":{"injectables/JobsService.html":{}}}],["injectmodel(permission.name",{"_index":650,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(permissionm.name",{"_index":1120,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["injectmodel(resumem.name",{"_index":1204,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":652,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(rolem.name",{"_index":1253,"title":{},"body":{"injectables/RolesService.html":{}}}],["injectmodel(subscriber.name",{"_index":1308,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":651,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(userm.name",{"_index":1404,"title":{},"body":{"injectables/UsersService.html":{}}}],["intercept",{"_index":1143,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1313,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":757,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":758,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid",{"_index":521,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/UserLoginDto.html":{}}}],["invalid'})@isnotempty({message",{"_index":606,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["is_permission",{"_index":843,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_key",{"_index":844,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":503,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"classes/job.html":{},"classes/role.html":{}}}],["isarray",{"_index":486,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{}}}],["isarray()@isstring({each",{"_index":551,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isboolean",{"_index":591,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["ischeck",{"_index":655,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["isdeleted",{"_index":454,"title":{},"body":{"classes/Company.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":487,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isempty",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["isexit",{"_index":861,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isglobal",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":513,"title":{},"body":{"classes/Company-2.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty",{"_index":481,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":530,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotemptyobject",{"_index":488,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":540,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isobject",{"_index":489,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ispermission",{"_index":852,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ispublic",{"_index":846,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":490,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty({message",{"_index":1336,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isunique",{"_index":493,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isunique(validationoptions",{"_index":1519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isvalid",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidatepassword",{"_index":1379,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidatepassword(password",{"_index":1393,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1048,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["iuser",{"_index":124,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":788,"title":{"classes/job.html":{}},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"miscellaneous/variables.html":{}}}],["job.dto",{"_index":774,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":480,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:15",{"_index":482,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:18",{"_index":484,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:21",{"_index":483,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:25",{"_index":548,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:30",{"_index":553,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:33",{"_index":547,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:36",{"_index":550,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:39",{"_index":549,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:42",{"_index":546,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:45",{"_index":543,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:47",{"_index":545,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:49",{"_index":554,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:52",{"_index":544,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:58",{"_index":541,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:59",{"_index":542,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:60",{"_index":555,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":791,"title":{},"body":{"modules/JobsModule.html":{},"classes/resume.html":{}}}],["jobdescription",{"_index":960,"title":{},"body":{"controllers/MailController.html":{}}}],["jobdocument",{"_index":801,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{},"classes/job.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":569,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/ResumesService.html":{},"classes/resume.html":{}}}],["jobm",{"_index":802,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobmodel",{"_index":795,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobs",{"_index":762,"title":{},"body":{"controllers/JobsController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":787,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":773,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":789,"title":{},"body":{"modules/JobsModule.html":{},"coverage.html":{},"classes/job.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":760,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":51,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":772,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobtitle",{"_index":948,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1024,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["join(this.getrootpath",{"_index":1074,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|png|image\\/jpeg|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/i",{"_index":724,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":24,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":884,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":223,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["khi",{"_index":889,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["kiếm",{"_index":1548,"title":{},"body":{"index.html":{}}}],["kiểm",{"_index":517,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ko",{"_index":1033,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["later",{"_index":994,"title":{},"body":{"modules/MailModule.html":{}}}],["legend",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["len",{"_index":883,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["level",{"_index":502,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JobsService.html":{},"classes/job.html":{}}}],["license",{"_index":1606,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/ResumesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["link",{"_index":1027,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["literal",{"_index":461,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["local",{"_index":905,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":19,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["localstrategy",{"_index":224,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":499,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/job.html":{}}}],["login",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":455,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"injectables/JobsService.html":{},"classes/job.html":{}}}],["logout",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(refreshtoken",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(req",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["lts.1",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["luu",{"_index":1063,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["làm",{"_index":966,"title":{},"body":{"controllers/MailController.html":{},"index.html":{}}}],["láng",{"_index":980,"title":{},"body":{"controllers/MailController.html":{}}}],["lập",{"_index":949,"title":{},"body":{"controllers/MailController.html":{}}}],["lệnh",{"_index":1534,"title":{},"body":{"index.html":{}}}],["ma",{"_index":880,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["mail",{"_index":911,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":984,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":920,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":909,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":936,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":989,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":921,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":52,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":919,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1140,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1146,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/job.html":{},"modules.html":{},"overview.html":{},"classes/permission.html":{},"properties.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"miscellaneous/typealiases.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(total",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":726,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":560,"title":{},"body":{"classes/CreatePermissionDto.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"classes/permission.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1515,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":402,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":35,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/FilesModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"classes/permission.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":37,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":923,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":986,"title":{},"body":{"modules/MailModule.html":{}}}],["moi",{"_index":1037,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mongo",{"_index":592,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["mongo.objectid.isvalid(id",{"_index":1130,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["mongodb+srv://trongnghia1112223333:irujdaycepdstzjw@cluster0.1aoxe.mongodb.net",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoid",{"_index":526,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mongoose",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["mongoose.schema.types.array",{"_index":1625,"title":{},"body":{"classes/resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":477,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["mongoose.types.objectid.isvalid(updateuserdto._id",{"_index":1430,"title":{},"body":{"injectables/UsersService.html":{}}}],["mongoosemodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":387,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refesh_token_expire",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["muc",{"_index":1029,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer",{"_index":1022,"title":{},"body":{"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["multer.config",{"_index":743,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":742,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":741,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":744,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1012,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1019,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mustbe",{"_index":525,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mọi",{"_index":1542,"title":{},"body":{"index.html":{}}}],["n",{"_index":1528,"title":{},"body":{"index.html":{}}}],["name",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/role.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["namecheck",{"_index":1254,"title":{},"body":{"injectables/RolesService.html":{}}}],["nay",{"_index":895,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["nest",{"_index":933,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["nestinterceptor",{"_index":1137,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":922,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1318,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["nestjs/passport",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":716,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":926,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["neu",{"_index":1032,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["new",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["new')@get('refresh",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["newrefreshtoken",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":1144,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1145,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":963,"title":{},"body":{"controllers/MailController.html":{}}}],["nguoi",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nguyễn",{"_index":942,"title":{},"body":{"controllers/MailController.html":{}}}],["nhất",{"_index":520,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nodemailer",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["noidanit@gmail.com",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normal",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1535,"title":{},"body":{"index.html":{}}}],["null",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"classes/job.html":{},"classes/user.html":{}}}],["nội",{"_index":954,"title":{},"body":{"controllers/MailController.html":{}}}],["o",{"_index":1064,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["object",{"_index":463,"title":{},"body":{"classes/Company.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["objuser",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1139,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["onmoduleinit",{"_index":634,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1004,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1586,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1479,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":335,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/ResumesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagination",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["parameters",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1052,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":710,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1317,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcompanydto",{"_index":1316,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1321,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1323,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1325,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1327,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1329,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1331,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createuserdto",{"_index":1334,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/local",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["passportmodule",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":868,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/user.html":{}}}],["patch",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":770,"title":{},"body":{"controllers/JobsController.html":{}}}],["path",{"_index":1023,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1083,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1079,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1206,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":267,"title":{"classes/permission.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/permission.html":{},"classes/role.html":{},"miscellaneous/variables.html":{}}}],["permission.dto",{"_index":1098,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":558,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:13",{"_index":564,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:16",{"_index":561,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:19",{"_index":562,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:22",{"_index":563,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.name",{"_index":631,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/role.html":{}}}],["permissiondocument",{"_index":642,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"classes/permission.html":{},"miscellaneous/typealiases.html":{}}}],["permissionm",{"_index":1119,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permissionmemodel",{"_index":640,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/RolesService.html":{},"classes/role.html":{},"miscellaneous/variables.html":{}}}],["permissions.apipath",{"_index":863,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.controller",{"_index":1110,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find",{"_index":862,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.method",{"_index":864,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1097,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":625,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"classes/permission.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1086,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":53,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1096,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":522,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"classes/user.html":{}}}],["phát",{"_index":961,"title":{},"body":{"controllers/MailController.html":{}}}],["plugin",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1217,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('by",{"_index":1159,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('create1",{"_index":332,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["post('login",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":719,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@responsemessage('upload",{"_index":703,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@publicpermission",{"_index":1270,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["prefix",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":999,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1031,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["projection",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":457,"title":{},"body":{"classes/Company.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["prop({required",{"_index":1643,"title":{},"body":{"classes/subscriber.html":{},"classes/user.html":{}}}],["prop({type",{"_index":462,"title":{},"body":{"classes/Company.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["properties",{"_index":449,"title":{"properties.html":{}},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"classes/job.html":{},"classes/permission.html":{},"properties.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@post('register')@responsemessage('register",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('refreshtoken",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(localauthguard)@useguards(throttlerguard)@apibody({type",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1075,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["publicpermission",{"_index":1280,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["push",{"_index":1213,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":336,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":501,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JobsService.html":{},"classes/job.html":{}}}],["query",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["quyen",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ra",{"_index":1025,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["recursive",{"_index":1039,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1610,"title":{},"body":{"classes/resume.html":{},"classes/role.html":{},"classes/user.html":{}}}],["refeshtoken",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["refeshtoken(payload",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["reflect",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":831,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refreshtoken",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"classes/user.html":{}}}],["refreshtoken(@req",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(req",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["register",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@req",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(req",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(user",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":326,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":756,"title":{},"body":{"injectables/FilesService.html":{},"injectables/SubscribersService.html":{}}}],["render",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["render('index",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["replace",{"_index":1152,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["req",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.body",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.cookies['refeshtoken",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["req?.headers?.folder_type",{"_index":1071,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":858,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":860,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1047,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":495,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["required'})@apiproperty({example",{"_index":1337,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["required'})@isarray({message",{"_index":587,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["required'})@isboolean({message",{"_index":584,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["required'})@ismongoid",{"_index":599,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["required'})@ismongoid({message",{"_index":612,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["res",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["res.clearcookie('refeshtoken",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie('refeshtoken",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":144,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response_message",{"_index":1149,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('login",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('mail",{"_index":930,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('refreshtoken",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('update",{"_index":780,"title":{},"body":{"controllers/JobsController.html":{}}}],["responsemessage('upload",{"_index":720,"title":{},"body":{"controllers/FilesController.html":{}}}],["result",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["result._doc",{"_index":1359,"title":{},"body":{"controllers/UsersController.html":{}}}],["result._id",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["result.address",{"_index":1419,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.age",{"_index":1418,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.company._id",{"_index":1424,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.company.name",{"_index":1425,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.created_at",{"_index":1420,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.createdat",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["result.email",{"_index":1411,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.gender",{"_index":1422,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.name",{"_index":1416,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.phone",{"_index":1417,"title":{},"body":{"injectables/UsersService.html":{}}}],["result.updated_at",{"_index":1421,"title":{},"body":{"injectables/UsersService.html":{}}}],["results",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/job.html":{},"modules.html":{},"overview.html":{},"classes/permission.html":{},"properties.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"miscellaneous/typealiases.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1185,"title":{"classes/resume.html":{}},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"classes/resume.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":1170,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":567,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:15",{"_index":574,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:18",{"_index":578,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:21",{"_index":577,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:24",{"_index":576,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:27",{"_index":573,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:30",{"_index":575,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:35",{"_index":601,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:39",{"_index":598,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:43",{"_index":600,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.name",{"_index":1188,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1203,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{},"classes/resume.html":{},"miscellaneous/typealiases.html":{}}}],["resumem",{"_index":1202,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumemodel",{"_index":1193,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1156,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1184,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1169,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1186,"title":{},"body":{"modules/ResumesModule.html":{},"coverage.html":{},"classes/resume.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1154,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":54,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1168,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reuslt",{"_index":1412,"title":{},"body":{"injectables/UsersService.html":{}}}],["role",{"_index":283,"title":{"classes/role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1230,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":582,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:15",{"_index":586,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":583,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:22",{"_index":585,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:27",{"_index":590,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":632,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"classes/user.html":{}}}],["roledocument",{"_index":643,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/role.html":{},"miscellaneous/typealiases.html":{}}}],["rolem",{"_index":1252,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolemodel",{"_index":637,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1221,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1242,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1229,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":628,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"classes/role.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1219,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":55,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":165,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":1030,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["run",{"_index":1536,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1141,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["salary",{"_index":500,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/job.html":{}}}],["salt",{"_index":1405,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1055,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":648,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sau",{"_index":888,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["schedulemodule",{"_index":987,"title":{},"body":{"modules/MailModule.html":{}}}],["schedulemodule.forroot",{"_index":988,"title":{},"body":{"modules/MailModule.html":{}}}],["schema",{"_index":389,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["schemafactory",{"_index":474,"title":{},"body":{"classes/Company.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["schemafactory.createforclass(company",{"_index":478,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":1581,"title":{},"body":{"classes/job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1603,"title":{},"body":{"classes/permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1626,"title":{},"body":{"classes/resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1638,"title":{},"body":{"classes/role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1650,"title":{},"body":{"classes/subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1677,"title":{},"body":{"classes/user.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":386,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":790,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1111,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1187,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1243,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1296,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1368,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["se",{"_index":892,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secret",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":887,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["select",{"_index":1218,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select('_id",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["select(projection",{"_index":1129,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["sendmail",{"_index":912,"title":{},"body":{"controllers/MailController.html":{}}}],["sent",{"_index":915,"title":{},"body":{"controllers/MailController.html":{}}}],["server",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata(is_permission",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sg",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["signoptions",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":704,"title":{},"body":{"controllers/FilesController.html":{}}}],["skill",{"_index":497,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["skills",{"_index":498,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/JobsService.html":{},"injectables/SubscribersService.html":{},"classes/job.html":{},"classes/subscriber.html":{}}}],["skip(offset",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["skipthrottle",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["soft",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":392,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["src/.../company.schema.ts",{"_index":1653,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1518,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1654,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1655,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1656,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1657,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1658,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1659,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":103,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:65",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:83",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:125",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:67",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:70",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:77",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/core/transform.interceptor.ts",{"_index":1134,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/auth/core/transform.interceptor.ts:20",{"_index":1312,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/auth/core/transform.interceptor.ts:22",{"_index":1314,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/auth/decorator/customize",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorator/customize.ts",{"_index":1456,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:23",{"_index":873,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":900,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":904,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":902,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/jwt",{"_index":824,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/local",{"_index":898,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts",{"_index":320,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:22",{"_index":333,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:26",{"_index":330,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:33",{"_index":338,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:43",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:48",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:57",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":382,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":390,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:13",{"_index":393,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:18",{"_index":395,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:36",{"_index":396,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:64",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:68",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:87",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":528,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1315,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1601,"title":{},"body":{"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":448,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:11",{"_index":458,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:13",{"_index":467,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":470,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":460,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:20",{"_index":472,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:23",{"_index":464,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:28",{"_index":473,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:33",{"_index":465,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:38",{"_index":469,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:40",{"_index":466,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":471,"title":{},"body":{"classes/Company.html":{}}}],["src/databases/databases.controller.ts",{"_index":616,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":623,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":633,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:15",{"_index":639,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:25",{"_index":641,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1403,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":538,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1320,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":691,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":693,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:28",{"_index":706,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:50",{"_index":696,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:55",{"_index":697,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:60",{"_index":700,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:65",{"_index":698,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":739,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":746,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":749,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":750,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":752,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":751,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":748,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1007,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:13",{"_index":1018,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:17",{"_index":1014,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:44",{"_index":1011,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/jobs/dto/create",{"_index":479,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1322,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":761,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:23",{"_index":764,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:34",{"_index":766,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:44",{"_index":767,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:50",{"_index":771,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:60",{"_index":768,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":786,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":792,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:11",{"_index":794,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:15",{"_index":796,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:40",{"_index":797,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:68",{"_index":798,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:72",{"_index":800,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:88",{"_index":799,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1602,"title":{},"body":{"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":1465,"title":{},"body":{"coverage.html":{},"classes/job.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:11",{"_index":1577,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:13",{"_index":1573,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":1576,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:17",{"_index":1575,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:19",{"_index":1572,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:21",{"_index":1568,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:23",{"_index":1563,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:29",{"_index":1578,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":1569,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:33",{"_index":1570,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:35",{"_index":1564,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":1579,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":1565,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:45",{"_index":1580,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:50",{"_index":1567,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:55",{"_index":1571,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:57",{"_index":1566,"title":{},"body":{"classes/job.html":{}}}],["src/jobs/schemas/job.schema.ts:9",{"_index":1574,"title":{},"body":{"classes/job.html":{}}}],["src/mail/mail.controller.ts",{"_index":910,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:16",{"_index":918,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.controller.ts:23",{"_index":916,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":983,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1006,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1467,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":557,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1324,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1087,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:23",{"_index":1089,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:39",{"_index":1091,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:48",{"_index":1092,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:53",{"_index":1095,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:62",{"_index":1093,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1109,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1112,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:15",{"_index":1113,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:20",{"_index":1114,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:40",{"_index":1115,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:68",{"_index":1116,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:75",{"_index":1118,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:92",{"_index":1117,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"classes/role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1469,"title":{},"body":{"coverage.html":{},"classes/permission.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:11",{"_index":1598,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:14",{"_index":1590,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:17",{"_index":1596,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:20",{"_index":1597,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:23",{"_index":1591,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:25",{"_index":1599,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:28",{"_index":1592,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:33",{"_index":1600,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:38",{"_index":1594,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:43",{"_index":1595,"title":{},"body":{"classes/permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:45",{"_index":1593,"title":{},"body":{"classes/permission.html":{}}}],["src/resumes/dto/create",{"_index":566,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1326,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1155,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:23",{"_index":1162,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:33",{"_index":1163,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:42",{"_index":1164,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:47",{"_index":1167,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:56",{"_index":1165,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:60",{"_index":1160,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1183,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1189,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:104",{"_index":1198,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:11",{"_index":1192,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:16",{"_index":1194,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:40",{"_index":1196,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:68",{"_index":1199,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:72",{"_index":1201,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:92",{"_index":1200,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1470,"title":{},"body":{"coverage.html":{},"classes/resume.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1616,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1624,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1623,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1620,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1611,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1619,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:29",{"_index":1617,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:39",{"_index":1612,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:41",{"_index":1621,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:44",{"_index":1613,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:49",{"_index":1622,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:54",{"_index":1615,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:59",{"_index":1618,"title":{},"body":{"classes/resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:61",{"_index":1614,"title":{},"body":{"classes/resume.html":{}}}],["src/roles/dto/create",{"_index":581,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1328,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1220,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:23",{"_index":1223,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:32",{"_index":1224,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:41",{"_index":1225,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:46",{"_index":1228,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:55",{"_index":1226,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1241,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1244,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:12",{"_index":1246,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:17",{"_index":1247,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:33",{"_index":1248,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:61",{"_index":1249,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:71",{"_index":1251,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:93",{"_index":1250,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":629,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1472,"title":{},"body":{"coverage.html":{},"classes/role.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:12",{"_index":1634,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:15",{"_index":1631,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:18",{"_index":1632,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:24",{"_index":1635,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:27",{"_index":1627,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:29",{"_index":1636,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:32",{"_index":1628,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:37",{"_index":1637,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:42",{"_index":1630,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:47",{"_index":1633,"title":{},"body":{"classes/role.html":{}}}],["src/roles/schemas/role.schema.ts:49",{"_index":1629,"title":{},"body":{"classes/role.html":{}}}],["src/subscribers/dto/create",{"_index":594,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1330,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1473,"title":{},"body":{"coverage.html":{},"classes/subscriber.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1647,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1639,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:17",{"_index":1648,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:20",{"_index":1640,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:25",{"_index":1649,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:30",{"_index":1642,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:35",{"_index":1646,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:37",{"_index":1641,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1645,"title":{},"body":{"classes/subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1267,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:23",{"_index":1271,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:32",{"_index":1272,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:37",{"_index":1273,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:42",{"_index":1276,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:50",{"_index":1274,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1290,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1298,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:10",{"_index":1300,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:15",{"_index":1302,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:24",{"_index":1303,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:28",{"_index":1304,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:32",{"_index":1306,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:36",{"_index":1305,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1333,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":627,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1475,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1667,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:12",{"_index":1671,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:14",{"_index":1670,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1672,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:18",{"_index":1661,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:20",{"_index":1660,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1668,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:24",{"_index":1674,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:26",{"_index":1673,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1662,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:33",{"_index":1663,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:35",{"_index":1675,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:38",{"_index":1664,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:43",{"_index":1676,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:48",{"_index":1666,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:53",{"_index":1669,"title":{},"body":{"classes/user.html":{}}}],["src/users/schemas/user.schema.ts:55",{"_index":1665,"title":{},"body":{"classes/user.html":{}}}],["src/users/users.controller.ts",{"_index":1341,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:25",{"_index":1344,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":1345,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:46",{"_index":1346,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":1349,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:60",{"_index":1347,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":759,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":1366,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":630,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1375,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:115",{"_index":1388,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:127",{"_index":1387,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:132",{"_index":1395,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:136",{"_index":1397,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:161",{"_index":1396,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:185",{"_index":1399,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:193",{"_index":1390,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":1382,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":1392,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":1383,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:84",{"_index":1385,"title":{},"body":{"injectables/UsersService.html":{}}}],["stack",{"_index":952,"title":{},"body":{"controllers/MailController.html":{}}}],["start",{"_index":504,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["startdate",{"_index":505,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JobsService.html":{},"classes/job.html":{}}}],["started",{"_index":1522,"title":{"index.html":{}},"body":{}}],["starttls",{"_index":995,"title":{},"body":{"modules/MailModule.html":{}}}],["statements",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":570,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/ResumesService.html":{},"classes/resume.html":{}}}],["statuscode",{"_index":1136,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1066,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":875,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1005,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":934,"title":{},"body":{"controllers/MailController.html":{}}}],["subscribe",{"_index":1292,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribemodel",{"_index":1301,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber",{"_index":1294,"title":{"classes/subscriber.html":{}},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"classes/subscriber.html":{}}}],["subscriber.dto",{"_index":1279,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":595,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:4",{"_index":596,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:7",{"_index":597,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1297,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":1307,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{},"classes/subscriber.html":{},"miscellaneous/typealiases.html":{}}}],["subscribers",{"_index":1268,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers.controller",{"_index":1291,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1278,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1295,"title":{},"body":{"modules/SubscribersModule.html":{},"coverage.html":{},"classes/subscriber.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1266,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":56,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1277,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/JobsController.html":{},"injectables/MulterConfigService.html":{}}}],["successfully')@get('account",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":845,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["super.canactivate(context",{"_index":850,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1583,"title":{},"body":{"modules.html":{}}}],["supposed",{"_index":1150,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["svg",{"_index":1584,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1043,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["t",{"_index":1530,"title":{},"body":{"index.html":{}}}],["table",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["tai",{"_index":1035,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tao",{"_index":1036,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetdirectory",{"_index":1015,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetmethod",{"_index":857,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetpath",{"_index":859,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["temp",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":939,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1002,"title":{},"body":{"modules/MailModule.html":{}}}],["test",{"_index":940,"title":{},"body":{"controllers/MailController.html":{}}}],["testcron",{"_index":913,"title":{},"body":{"controllers/MailController.html":{}}}],["testing",{"_index":935,"title":{},"body":{"controllers/MailController.html":{}}}],["text",{"_index":937,"title":{},"body":{"controllers/MailController.html":{}}}],["th",{"_index":1531,"title":{},"body":{"index.html":{}}}],["thanh",{"_index":890,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.appservice.gethello",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.handlerefresh(refreshtoken",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(refreshtoken",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(req.body",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":906,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+limit",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyid(id",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('jwt_refesh_token_expire",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refesh_token_secrect",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('should_init",{"_index":656,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1072,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":732,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":733,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":736,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":735,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashedpassword(result.password",{"_index":1414,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jobmodel",{"_index":819,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":804,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":818,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":820,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":823,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":821,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":777,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(pagesize",{"_index":778,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":779,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":783,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":782,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailerservice.sendmail",{"_index":931,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmemodel",{"_index":1128,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmemodel.count",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmemodel.create",{"_index":1126,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmemodel.find(filter)).length",{"_index":1127,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmemodel.find({}).select('_id",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmemodel.findbyid(id",{"_index":1131,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmemodel.findone",{"_index":1121,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmemodel.insertmany(init_permissions",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmemodel.softdelete",{"_index":1133,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmemodel.updateone",{"_index":1132,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create",{"_index":1101,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(current",{"_index":1103,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1104,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1106,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1105,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.refeshtoken(payload",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reflector.get",{"_index":1148,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride",{"_index":853,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":847,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1210,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1205,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1209,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1211,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1215,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1212,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1173,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(current",{"_index":1174,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyuser(user",{"_index":1179,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1175,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1177,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1176,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["this.rolemodel.count",{"_index":661,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1258,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1259,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1264,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id)).populate",{"_index":1261,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":1255,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1265,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1263,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.findone(userrole._id)).toobject",{"_index":896,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1233,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(current",{"_index":1234,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1235,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1237,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1236,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribemodel.create",{"_index":1310,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1283,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall",{"_index":1284,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(+id",{"_index":1285,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(+id",{"_index":1287,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(+id",{"_index":1286,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1410,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.count",{"_index":659,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1415,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1427,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid",{"_index":1443,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1446,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1432,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashedpassword('123456",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(result",{"_index":1354,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.create(user",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findall(+limit",{"_index":1357,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyemail(username",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(id",{"_index":1358,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyrefeshtoken(refreshtoken",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidatepassword",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1362,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1361,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuserrefeshtoken",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateuserrefeshtoken(user._id",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateuserrefeshtoken(user._id.tostring",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttlerguard",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":1369,"title":{},"body":{"modules/UsersModule.html":{}}}],["throttlermodule.forroot",{"_index":1370,"title":{},"body":{"modules/UsersModule.html":{}}}],["throttlers",{"_index":1371,"title":{},"body":{"modules/UsersModule.html":{}}}],["throw",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["thu",{"_index":1028,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["thông",{"_index":1543,"title":{},"body":{"index.html":{}}}],["thức",{"_index":1552,"title":{},"body":{"index.html":{}}}],["tiktok",{"_index":1556,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":476,"title":{},"body":{"classes/Company.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["tin",{"_index":1544,"title":{},"body":{"index.html":{}}}],["token",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["ton",{"_index":1034,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["total",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["tra",{"_index":518,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/UserLoginDto.html":{}}}],["transformer",{"_index":485,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["transforminterceptor",{"_index":1142,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":990,"title":{},"body":{"modules/MailModule.html":{}}}],["triển",{"_index":962,"title":{},"body":{"controllers/MailController.html":{}}}],["triệu",{"_index":956,"title":{},"body":{"controllers/MailController.html":{}}}],["trongnghia1112223333@gmail.com",{"_index":932,"title":{},"body":{"controllers/MailController.html":{}}}],["true",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["true})@isnotempty({message",{"_index":552,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["truyen",{"_index":882,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["try",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{}}}],["trying",{"_index":1057,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trình",{"_index":950,"title":{},"body":{"controllers/MailController.html":{}}}],["ttl",{"_index":1372,"title":{},"body":{"modules/UsersModule.html":{}}}],["ty",{"_index":946,"title":{},"body":{"controllers/MailController.html":{}}}],["type",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"miscellaneous/typealiases.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1651,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1319,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["tác",{"_index":1538,"title":{},"body":{"index.html":{}}}],["tìm",{"_index":1547,"title":{},"body":{"index.html":{}}}],["tại",{"_index":516,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["tồn",{"_index":515,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["udemy",{"_index":1560,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":841,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception('invalid",{"_index":1260,"title":{},"body":{"injectables/RolesService.html":{}}}],["unauthorizedexception('not",{"_index":1428,"title":{},"body":{"injectables/UsersService.html":{}}}],["unauthorizedexception('permission",{"_index":1125,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["unauthorizedexception('role",{"_index":1257,"title":{},"body":{"injectables/RolesService.html":{}}}],["unauthorizedexception('username",{"_index":907,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":1609,"title":{},"body":{"classes/resume.html":{},"classes/role.html":{},"classes/user.html":{}}}],["ung",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["unique",{"_index":1644,"title":{},"body":{"classes/subscriber.html":{},"classes/user.html":{}}}],["unknown",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1607,"title":{},"body":{"properties.html":{}}}],["update",{"_index":327,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1360,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":734,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(id",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1348,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":349,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":456,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":1208,"title":{},"body":{"injectables/ResumesService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"classes/job.html":{},"classes/permission.html":{},"classes/resume.html":{},"classes/role.html":{},"classes/subscriber.html":{},"classes/user.html":{}}}],["updatefiledto",{"_index":699,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":769,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1094,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1166,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateresumedto.status",{"_index":1214,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updateroledto",{"_index":1227,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updateroledto.name",{"_index":1262,"title":{},"body":{"injectables/RolesService.html":{}}}],["updates",{"_index":755,"title":{},"body":{"injectables/FilesService.html":{},"injectables/SubscribersService.html":{}}}],["updatesubscriberdto",{"_index":1275,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1332,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1433,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.address",{"_index":1439,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.age",{"_index":1438,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.company._id",{"_index":1440,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.company.name",{"_index":1441,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.email",{"_index":1434,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.name",{"_index":1436,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.password",{"_index":1435,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.phone",{"_index":1437,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserrefeshtoken",{"_index":1380,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserrefeshtoken(id",{"_index":1398,"title":{},"body":{"injectables/UsersService.html":{}}}],["upgrade",{"_index":993,"title":{},"body":{"modules/MailModule.html":{}}}],["upload",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":709,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":695,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":701,"title":{},"body":{"controllers/FilesController.html":{}}}],["uri",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":571,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/resume.html":{}}}],["useclass",{"_index":745,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":708,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":721,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":133,"title":{"classes/user.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["user')@post('logout",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["user._id",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["user._id.tostring",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":509,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":510,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:19",{"_index":511,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:25",{"_index":607,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":610,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":609,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":611,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":603,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:39",{"_index":602,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":608,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":613,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1335,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:52",{"_index":604,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:53",{"_index":605,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:54",{"_index":614,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:61",{"_index":1339,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:66",{"_index":1338,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.email",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["user.role",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["user@gmail.com",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":647,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":644,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"classes/user.html":{}}}],["userid",{"_index":572,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/ResumesService.html":{},"classes/resume.html":{}}}],["userlogindto",{"_index":173,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@post('login')@responsemessage('login",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["userm",{"_index":1400,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":636,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/UserLoginDto.html":{}}}],["userrole",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":1423,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":1342,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1367,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1351,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1350,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":626,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1340,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":638,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":57,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":246,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":970,"title":{},"body":{"controllers/MailController.html":{},"index.html":{}}}],["validate",{"_index":869,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":872,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":903,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":491,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validateuser",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":1520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":492,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["value",{"_index":1017,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["vao",{"_index":893,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["variable",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1678,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1604,"title":{},"body":{"properties.html":{}}}],["vien",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viên",{"_index":951,"title":{},"body":{"controllers/MailController.html":{}}}],["việc",{"_index":967,"title":{},"body":{"controllers/MailController.html":{}}}],["viện",{"_index":1532,"title":{},"body":{"index.html":{}}}],["vnđ/tháng",{"_index":957,"title":{},"body":{"controllers/MailController.html":{}}}],["void",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{}}}],["văn",{"_index":943,"title":{},"body":{"controllers/MailController.html":{}}}],["với",{"_index":968,"title":{},"body":{"controllers/MailController.html":{},"index.html":{}}}],["web",{"_index":965,"title":{},"body":{"controllers/MailController.html":{}}}],["website",{"_index":1550,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":938,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1081,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["y",{"_index":1549,"title":{},"body":{"index.html":{}}}],["year",{"_index":976,"title":{},"body":{"controllers/MailController.html":{}}}],["yes",{"_index":1384,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":1056,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["youtube",{"_index":1554,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Render,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { Console } from 'console';\nimport { LocalAuthGuard } from './auth/passport/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/passport/jwt-auth.guard';\nimport { Public } from './auth/decorator/customize';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './auth/passport/jwt-auth.guard';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { MailModule } from './mail/mail.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\n@Module({\n  imports: [\n    // MongooseModule.forRoot(\n    //   'mongodb+srv://trongnghia1112223333:IRUJdaycePdStzjw@cluster0.1aoxe.mongodb.net/',\n    // ),\n    // add mongoose module\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    MailModule,\n    SubscribersModule,\n  ],\n\n  //\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getAccount\n                            \n                            \n                                    \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Logout successfully')@Get('account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Render('index')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@ApiBody({type: UserLoginDto})@Post('login')@ResponseMessage('Login successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req: Request, user: IUser, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('logout User')@Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('refreshToken NEW')@Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ResponseMessage('register successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Render,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Public, ResponseMessage, User } from './decorator/customize';\nimport { LocalAuthGuard } from './passport/local-auth.guard';\nimport { Request, Response, response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { SkipThrottle, ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { UserLoginDto } from 'src/users/dto/create-user.dto';\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private roleService: RolesService,\n  ) {}\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  @ApiBody({ type: UserLoginDto })\n  @Post('login')\n  @ResponseMessage('Login successfully')\n  async login(@Req() req, @Res({ passthrough: true }) res: Response) {\n    return this.authService.login(req.user, res);\n  }\n\n  @Public()\n  @Post('register')\n  @ResponseMessage('register successfully')\n  async register(@Req() req) {\n    console.log('req.body', req.body);\n    let result = await this.authService.register(req.body);\n    console.log('result', result);\n    return {\n      _id: result._id,\n      createdAt: result.createdAt,\n    };\n  }\n\n  @Get('profile')\n  async getProfile(@Req() req) {\n    return req.user;\n  }\n  @ResponseMessage('Logout successfully')\n  @Get('account')\n  async getAccount(@User() user: IUser) {\n    const temp = (await this.roleService.findOne(user.role._id)) as any;\n    user.permissions = temp.permissions;\n    console.log('user', user);\n    return { user };\n  }\n\n  @Public()\n  @ResponseMessage('refreshToken NEW')\n  @Get('refresh')\n  refreshToken(@Req() req: Request, @Res({ passthrough: true }) res: Response) {\n    const refreshToken = req.cookies['refeshToken'];\n    return this.authService.handleRefresh(refreshToken, res);\n  }\n\n  @ResponseMessage('logout User')\n  @Post('logout')\n  logout(\n    @Req() req: Request,\n    @User() user: IUser,\n    @Res({ passthrough: true }) res: Response,\n  ) {\n    const refreshToken = req.cookies['refeshToken'];\n    return this.authService.logout(refreshToken, user, res);\n  }\n\n  @Get()\n  @Render('index')\n  getHello() {\n    // return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleRefresh\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                refeshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleRefresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefresh(refreshToken: string, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(refreshToken, user: IUser, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refeshToken\n                        \n                    \n                \n            \n            \n                \nrefeshToken(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interface';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { Response } from 'express';\nimport { permission } from 'src/permissions/schemas/permission.schema';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private roleService: RolesService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findByEmail(username);\n    let isValid = await this.usersService.isValidatePassword(\n      pass,\n      user.password,\n    );\n    if (user && isValid) {\n      const userRole = user.role as unknown as { _id: string; name: string };\n      const temp = await this.roleService.findOne(userRole._id);\n      const { password, ...result } = user;\n\n      const objUser = {\n        ...user.toObject(),\n        permissions: temp?.permissions ?? [],\n      };\n      return objUser;\n    }\n    return null;\n  }\n  async login(user: IUser, res: Response) {\n    const { _id, email, name, role, permissions } = user;\n    const payload = {\n      sub: 'token login',\n      iss: 'from server',\n      email: user.email,\n      _id: user._id,\n      name: user.name,\n      role: user.role,\n    };\n    const refreshToken = this.refeshToken(payload);\n    await res.cookie('refeshToken', refreshToken, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFESH_TOKEN_EXPIRE')),\n    });\n    await this.usersService.updateUserRefeshToken(user._id, refreshToken);\n    console.log('payload', user);\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        email: user.email,\n        _id: user._id,\n        name: user.name,\n        role: user.role,\n        permissions: user.permissions,\n      },\n    };\n  }\n  async register(user) {\n    return this.usersService.create(user);\n  }\n  refeshToken(payload: any) {\n    let refeshToken = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFESH_TOKEN_SECRECT'),\n      expiresIn: this.configService.get('JWT_REFESH_TOKEN_EXPIRE'),\n    });\n    return refeshToken;\n  }\n  async handleRefresh(refreshToken: string, res: Response) {\n    try {\n      this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFESH_TOKEN_SECRECT'),\n      });\n      let user = await this.usersService.findUserByRefeshToken(refreshToken);\n      if (user) {\n        const payload = {\n          sub: 'token login',\n          iss: 'from server',\n          email: user.email,\n          _id: user._id,\n          name: user.name,\n          role: user.role,\n        };\n\n        const newRefreshToken = this.refeshToken(payload);\n        await this.usersService.updateUserRefeshToken(\n          user._id.toString(),\n          newRefreshToken,\n        );\n        // fetch userRole\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.roleService.findOne(userRole._id);\n        res.clearCookie('refeshToken');\n        res.cookie('refeshToken', newRefreshToken, {\n          httpOnly: true,\n          secure: false,\n          maxAge: ms(this.configService.get('JWT_REFESH_TOKEN_EXPIRE')),\n        });\n\n        return {\n          access_token: this.jwtService.sign(payload),\n          user: {\n            email: user.email,\n            _id: user._id,\n            name: user.name,\n            role: user.role,\n            permissions: temp?.permissions ?? [],\n          },\n        };\n      } else {\n        throw new BadRequestException('Invalid token');\n      }\n    } catch (e) {\n      throw new BadRequestException('Invalid token');\n    }\n  }\n  async logout(refreshToken, user: IUser, res: Response) {\n    try {\n      let user = await this.usersService.findUserByRefeshToken(refreshToken);\n      if (user) {\n        res.clearCookie('refeshToken');\n        await this.usersService.updateUserRefeshToken(user._id.toString(), '');\n        return {\n          message: 'Logout successfully',\n        };\n      } else {\n        throw new BadRequestException('Invalid token');\n      }\n    } catch (e) {\n      throw new BadRequestException('Invalid token');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                create1\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create1\n                        \n                    \n                \n            \n            \n                \n                        \n                    create1(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create1')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(limit: string, page: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, User } from 'src/auth/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n  @Post('create1')\n  create1(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return 'aaa';\n  }\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    console.log('abc', user);\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @Public()\n  findAll(\n    @Query('pageSize') limit: string,\n    @Query('current') page: string,\n    @Query() qs: string,\n  ) {\n    return this.companiesService.findAll(+limit, +page, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: number) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: number,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(limit: number, page: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport { isEmpty } from 'rxjs';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n  async create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    try {\n      console.log(createCompanyDto);\n\n      let result = await this.companyModel.create({\n        ...createCompanyDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      });\n      return result;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }\n\n  async findAll(limit: number, page: number, qs: string) {\n    let { filter, projection, population } = aqp(qs);\n    let { sort } = aqp(qs);\n    delete filter.pageSize;\n    delete filter.current;\n    let offset = (+page - 1) * limit;\n    let defaultLimit = limit ? +limit : 10;\n    const total = (await this.companyModel.find(filter)).length;\n    const pages = Math.ceil(total / defaultLimit);\n\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        total,\n        pages,\n        current: page,\n        pageSize: limit,\n      },\n      result,\n    };\n  }\n\n  findOne(id: number) {\n    return this.companyModel.findById(id);\n  }\n\n  async update(id: number, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not update user';\n    }\n    console.log('updateCompanyDto', updateCompanyDto);\n    return await this.companyModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: number, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found company';\n    }\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deleteBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return await this.companyModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop()\n  name: string;\n  @Prop()\n  address: string;\n  @Prop()\n  description: string;\n  @Prop()\n  logo: string;\n\n  @Prop()\n  created_at: Date;\n  @Prop()\n  updated_at: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deleteBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nimport { IsUnique } from 'src/auth/decorator/customize';\nexport class Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ message: 'Skill is required' })\n  skills: string[];\n\n  @IsNotEmpty({ message: 'Location is required' })\n  location: string;\n\n  @IsNotEmpty({ message: 'Salary is required' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'Quantity is required' })\n  quantity: number;\n\n  @IsNotEmpty({ message: 'Level is required' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Description is required' })\n  description: string;\n  @IsNotEmpty({ message: 'isActive is required' })\n  isActive: boolean;\n  @IsNotEmpty({ message: 'Start date is required' })\n  startDate: Date;\n\n  @IsNotEmpty({ message: 'End date is required' })\n  endDate: Date;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  created_at: Date;\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nimport { IsUnique } from 'src/auth/decorator/customize';\nexport class Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateUserDto {\n  // @IsUnique({ message: 'Email đã tồn tại' }) // Kiểm tra email duy nhất\n  @IsEmail({}, { message: 'Email is invalid' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  phone: number;\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string;\n\n  @IsNotEmpty({ message: 'gender is required' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'role is required' })\n  @IsMongoId({ message: 'role mustbe a mongoId' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty({ message: 'Email is required' })\n  @ApiProperty({ example: 'aaa  ' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty({ message: 'Email is required' })\n  @ApiProperty({ example: 'aaa  ' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                created_at\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Description is required' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Logo is required' })\n  logo: string;\n\n  created_at: Date;\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                created_at\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'End date is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Location is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quantity is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Salary is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({message: 'Skill is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Start date is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nimport { IsUnique } from 'src/auth/decorator/customize';\nexport class Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ message: 'Skill is required' })\n  skills: string[];\n\n  @IsNotEmpty({ message: 'Location is required' })\n  location: string;\n\n  @IsNotEmpty({ message: 'Salary is required' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'Quantity is required' })\n  quantity: number;\n\n  @IsNotEmpty({ message: 'Level is required' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Description is required' })\n  description: string;\n  @IsNotEmpty({ message: 'isActive is required' })\n  isActive: boolean;\n  @IsNotEmpty({ message: 'Start date is required' })\n  startDate: Date;\n\n  @IsNotEmpty({ message: 'End date is required' })\n  endDate: Date;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  created_at: Date;\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nexport class CreatePermissionDto {\n  @IsNotEmpty({ message: 'name is required' })\n  name: string;\n\n  @IsNotEmpty({ message: 'apiPath is required' })\n  apiPath: string;\n\n  @IsNotEmpty({ message: 'method is required' })\n  method: string;\n\n  @IsNotEmpty({ message: 'module is required' })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'userId is required' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url is required' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status is required' })\n  status: string;\n\n  @IsNotEmpty({ message: 'companyId is required' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId is required' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url is required' })\n  url: string;\n\n  @IsNotEmpty({ message: 'companyId is required ' })\n  @IsMongoId()\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId is required' })\n  @IsMongoId()\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive is required'})@IsBoolean({message: 'isActive must be a boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions is required'})@IsArray({message: 'permissions must be an array'})@IsMongoId({each: true, message: 'permissions must be an array of mongoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose, { mongo } from 'mongoose';\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: 'name is required' })\n  name: string;\n\n  @IsNotEmpty({ message: 'description is required' })\n  description: string;\n\n  @IsNotEmpty({ message: 'isActive is required' })\n  @IsBoolean({ message: 'isActive must be a boolean' })\n  isActive: boolean;\n\n  @IsNotEmpty({ message: 'permissions is required' })\n  @IsArray({ message: 'permissions must be an array' })\n  @IsMongoId({ each: true, message: 'permissions must be an array of mongoId' })\n  permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateSubscriberDto {\n  email: string;\n\n  @IsNotEmpty({ message: 'Skills is required' })\n  skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId is required '})@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId is required'})@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'userId is required' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url is required' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status is required' })\n  status: string;\n\n  @IsNotEmpty({ message: 'companyId is required' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId is required' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url is required' })\n  url: string;\n\n  @IsNotEmpty({ message: 'companyId is required ' })\n  @IsMongoId()\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId is required' })\n  @IsMongoId()\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                created_at\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email is invalid'})@IsNotEmpty({message: 'Email is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'gender is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'role is required'})@IsMongoId({message: 'role mustbe a mongoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nimport { IsUnique } from 'src/auth/decorator/customize';\nexport class Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateUserDto {\n  // @IsUnique({ message: 'Email đã tồn tại' }) // Kiểm tra email duy nhất\n  @IsEmail({}, { message: 'Email is invalid' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  phone: number;\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string;\n\n  @IsNotEmpty({ message: 'gender is required' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'role is required' })\n  @IsMongoId({ message: 'role mustbe a mongoId' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty({ message: 'Email is required' })\n  @ApiProperty({ example: 'aaa  ' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty({ message: 'Email is required' })\n  @ApiProperty({ example: 'aaa  ' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  permission,\n  permissionSchema,\n} from 'src/permissions/schemas/permission.schema';\nimport { user, userSchema } from 'src/users/schemas/user.schema';\nimport { role, roleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: permission.name, schema: permissionSchema },\n      { name: user.name, schema: userSchema },\n      { name: role.name, schema: roleSchema },\n    ]),\n  ],\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionMeModel: SoftDeleteModel, userModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionMeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  permission,\n  permissionDocument,\n} from 'src/permissions/schemas/permission.schema';\nimport { role, roleDocument } from 'src/roles/schemas/role.schema';\nimport { user, userDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  constructor(\n    @InjectModel(permission.name)\n    private permissionMeModel: SoftDeleteModel,\n    @InjectModel(user.name) private userModel: SoftDeleteModel,\n    @InjectModel(role.name)\n    private roleModel: SoftDeleteModel,\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n  async onModuleInit() {\n    console.log(`The module has been initialized.`);\n    const isCheck = this.configService.get('SHOULD_INIT');\n    if (Boolean(isCheck)) {\n      const countUser = await this.userModel.count({});\n      const countRole = await this.roleModel.count({});\n      const countPermission = await this.permissionMeModel.count({});\n      if (countPermission === 0) {\n        await this.permissionMeModel.insertMany(INIT_PERMISSIONS);\n      }\n      if (countRole === 0) {\n        const permissions = await this.permissionMeModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin Role full quyen',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'User Role nguoi dung / ung vien',\n            isActive: true,\n            permissions: [],\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const adminRole = await this.roleModel\n          .findOne({ name: ADMIN_ROLE })\n          .select('_id');\n        const userRole = await this.roleModel\n          .findOne({ name: USER_ROLE })\n          .select('_id');\n        console.log('adminRole', adminRole);\n        console.log('userRole', userRole);\n        await this.userModel.insertMany([\n          {\n            name: 'i am admin',\n            password: this.userService.getHashedPassword('123456'),\n            age: 20,\n            gender: 'male',\n            email: 'admin@gmail.com',\n            role: adminRole,\n            address: 'hn',\n          },\n          {\n            name: 'i am user IT',\n            password: this.userService.getHashedPassword('123456'),\n            age: 20,\n            gender: 'male',\n            email: 'user@gmail.com',\n            role: userRole,\n            address: 'sg',\n          },\n        ]);\n      }\n\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        console.log('Database is already initializedaaaaaa ');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ResponseMessage('Upload Single File')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ResponseMessage } from 'src/auth/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Post('upload')\n  @ResponseMessage('Upload Single File')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType:\n            /^(jpg|jpeg|png|image\\/jpeg|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/i,\n        })\n        .addMaxSizeValidator({\n          maxSize: 1024 * 1024,\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n        }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return {\n      fileName: file.filename,\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    module: string;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(pageSize: number, current: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/auth/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  async create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    let result = await this.jobsService.create(createJobDto, user);\n    console.log('result', result);\n    return {\n      _id: result._id,\n      createdAt: result.createdAt,\n    };\n  }\n\n  @Get()\n  @Public()\n  findAll(\n    @Query('pageSize') pageSize: number,\n    @Query('current') current: number,\n    @Query() qs: string,\n  ) {\n    return this.jobsService.findAll(pageSize, current, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: number) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update successfully')\n  async update(\n    @Param('id') id: number,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser,\n  ) {\n    console.log('xx', id);\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { job, jobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: job.name, schema: jobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(pageSize, current, qs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageSize\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                current\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { jobDocument, job as jobM } from './schemas/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(jobM.name) private jobModel: SoftDeleteModel,\n  ) {}\n  create(createJobDto: CreateJobDto, user: IUser) {\n    let result = this.jobModel.create({\n      name: createJobDto.name,\n      skills: createJobDto.skills,\n      location: createJobDto.location,\n      salary: createJobDto.salary,\n      quantity: createJobDto.quantity,\n      level: createJobDto.level,\n      description: createJobDto.description,\n      startDate: createJobDto.startDate,\n      endDate: createJobDto.endDate,\n      isActive: createJobDto.isActive,\n      company: {\n        _id: createJobDto.company._id,\n        name: createJobDto.company.name,\n        logo: createJobDto.company.logo,\n      },\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return result;\n  }\n\n  async findAll(pageSize, current, qs) {\n    let { filter, projection, population } = aqp(qs);\n    let { sort } = aqp(qs);\n    delete filter.pageSize;\n    delete filter.current;\n    let offset = (+current - 1) * pageSize;\n    let defaultLimit = pageSize ? +pageSize : 10;\n    const total = (await this.jobModel.find(filter)).length;\n    const pages = Math.ceil(total / defaultLimit);\n\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        total,\n        pages,\n        pageSize,\n        current,\n      },\n      result: result,\n    };\n  }\n\n  async findOne(id: number) {\n    return await this.jobModel.findOne({ _id: id });\n  }\n\n  async update(id: number, updateJobDto: UpdateJobDto, user: IUser) {\n    console.log('xx', id);\n\n    let result = await this.jobModel.updateOne(\n      { _id: id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return result;\n  }\n\n  async remove(id: number, user: IUser) {\n    await this.jobModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    let result = await this.jobModel.softDelete({ _id: id });\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt-auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt-auth.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PERMISSION, IS_PUBLIC_KEY } from '../decorator/customize';\nimport { Request } from 'express';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n    const isPermission = this.reflector.getAllAndOverride(\n      IS_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException(' Token is invalid');\n    }\n    const targetMethod = request.method;\n    const targetPath = request.route?.path;\n    const permissions = user.permissions;\n    const isExit = permissions.find(\n      (permissions) =>\n        permissions.apiPath === targetPath &&\n        permissions.method === targetMethod,\n    );\n    if (!isExit && !isPermission) {\n      throw new ForbiddenException('You do not have permission to access');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { role } from 'src/roles/schemas/role.schema';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  // giai ma token duoc truyen len\n  constructor(\n    private configService: ConfigService,\n    private roleService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN'),\n    });\n  }\n  //  sau khi giai ma token thanh cong se truyen vao ham nay\n  async validate(payload: IUser) {\n    let { _id, name, email, role } = payload;\n\n    const userRole = role as unknown as { _id: string; name: string };\n    const temp = (await this.roleService.findOne(userRole._id)).toObject();\n    console.log(temp);\n    return { _id, name, email, role, permissions: temp?.permissions ?? [] };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n\n    let result = user;\n    if (!user) {\n      throw new UnauthorizedException('Username or password is incorrect');\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                sendMail\n                            \n                            \n                                    \n                                testCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Mail sent!')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        testCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    testCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_SECOND)\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Public, ResponseMessage } from 'src/auth/decorator/customize';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private mailerService: MailerService,\n  ) {}\n\n  @Cron(CronExpression.EVERY_SECOND)\n  testCron() {\n    console.log('test cron');\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Mail sent!')\n  async sendMail() {\n    await this.mailerService.sendMail({\n      to: 'trongnghia1112223333@gmail.com',\n      from: 'nest-modules',\n      subject: 'Testing Nest MailerModule ✔',\n      text: 'welcome',\n      template: 'test',\n      context: {\n        candidateName: 'Nguyễn Văn A',\n        companyName: 'Công Ty ABC',\n        jobTitle: 'Lập Trình Viên Full-Stack',\n        location: 'Hà Nội',\n        salary: '20-25 triệu VNĐ/tháng',\n        deadline: '15/03/2025',\n        jobDescription:\n          'Phát triển ứng dụng web, làm việc với frontend và backend...',\n        contactEmail: 'hr@abc.com',\n        applicationLink: 'https://abc.com/apply',\n        year: new Date().getFullYear(),\n        companyAddress: '123 Đường Láng, Hà Nội',\n      },\n    });\n\n    return 'Mail sent!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { ScheduleModule } from '@nestjs/schedule';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('MAIL_HOST'),\n          secure: false, // upgrade later with STARTTLS\n          auth: {\n            user: configService.get('SENDER_EMAIL'),\n            pass: configService.get('SENDER_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: '\"nest-modules\" ',\n        },\n        preview: true,\n        template: {\n          dir: __dirname + '/templates',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [MailController],\n  providers: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport fs from 'fs';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  // tra ra duong link thu muc root\n  getRootPath = () => {\n    return process.cwd();\n  };\n  //   neu duong link ko ton tai , tao moi\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n  //   cau hiinh file dc luu o dau\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          console.log(req.headers);\n          const folder = req?.headers?.folder_type ?? 'default';\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`));\n        },\n        filename: (req, file, cb) => {\n          // get image extension\n          let extName = path.extname(file.originalname);\n\n          // get image's name (without extension)\n          let baseName = path.basename(file.originalname, extName);\n\n          let finalName = `${baseName}-${Date.now()}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { User } from 'src/auth/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  async create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @User() user: IUser,\n  ) {\n    let result = await this.permissionsService.create(\n      createPermissionDto,\n      user,\n    );\n    console.log(result);\n    return {\n      _id: result._id,\n      createdAt: result.createdAt,\n    };\n  }\n\n  @Get()\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs,\n  ) {\n    return this.permissionsService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: number,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { permission, permissionSchema } from './schemas/permission.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: permission.name, schema: permissionSchema },\n    ]),\n  ],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionMeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionMeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current, pageSize, qs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport {\n  permission as permissionM,\n  permissionDocument,\n} from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport { mongo } from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(permissionM.name)\n    private permissionMeModel: SoftDeleteModel,\n  ) {}\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    let apiPath = await this.permissionMeModel.findOne({\n      apiPath: createPermissionDto.apiPath,\n    });\n    let method = await this.permissionMeModel.findOne({\n      method: createPermissionDto.method,\n    });\n    console.log(apiPath, method);\n    if (apiPath && method) {\n      throw new UnauthorizedException('Permission already exists');\n    }\n    return await this.permissionMeModel.create({\n      ...createPermissionDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(current, pageSize, qs) {\n    let { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+current - 1) * pageSize;\n    let defaultLimit = pageSize ? +pageSize : 10;\n    let total = (await this.permissionMeModel.find(filter)).length;\n    const pages = Math.ceil(total / defaultLimit);\n    const result = await this.permissionMeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection)\n      .exec();\n\n    return {\n      meta: {\n        total,\n        pages,\n        current,\n        pageSize,\n      },\n      result,\n    };\n  }\n\n  findOne(id: number) {\n    if (!mongo.ObjectId.isValid(id)) {\n      throw new UnauthorizedException('Permission not found');\n    }\n    return this.permissionMeModel.findById(id);\n  }\n\n  async update(\n    id: number,\n    updatePermissionDto: UpdatePermissionDto,\n    user: IUser,\n  ) {\n    return await this.permissionMeModel.updateOne(\n      { _id: id },\n      {\n        ...updatePermissionDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: number, user: IUser) {\n    await this.permissionMeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return await this.permissionMeModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(\n            'response_message',\n            context.getHandler(),\n          ) || '',\n\n        data,\n        meta: {}, // if this is supposed to be the actual return then replace {} with data.result\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                byUser\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        byUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    byUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { User } from 'src/auth/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  async create(@Body() createResumeDto: CreateUserCvDto, @User() user: IUser) {\n    let result = await this.resumesService.create(createResumeDto, user);\n    console.log(result);\n    return {\n      _id: result._id,\n      createdAt: result.createdAt,\n    };\n  }\n\n  @Get()\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: string,\n  ) {\n    return this.resumesService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: number,\n    @Body() updateResumeDto: UpdateResumeDto,\n    @User() user: IUser,\n  ) {\n    return this.resumesService.update(id, updateResumeDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n  @Post('by-user')\n  byUser(@User() user: IUser) {\n    return this.resumesService.findByUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_exports\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService \n\nResumesService \n\n\n\nResumesModule\n\nResumesModule\n\nResumesService  -->\n\nResumesModule->ResumesService \n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { Mongoose } from 'mongoose';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { resume, resumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: resume.name, schema: resumeSchema }]),\n  ],\n  controllers: [ResumesController],\n  providers: [ResumesService],\n  exports: [ResumesService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUser\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page, limit, qs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUser(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { resume as resumeM, resumeDocument } from './schemas/resume.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(resumeM.name)\n    private resumeModel: SoftDeleteModel,\n  ) {}\n  async create(createResumeDto: CreateUserCvDto, user: IUser) {\n    let result = await this.resumeModel.create({\n      ...createResumeDto,\n      email: user.email,\n      userId: user._id,\n      status: 'PENDING',\n      history: [\n        {\n          status: 'PENDING',\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n      ],\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return result;\n  }\n\n  async findAll(page, limit, qs) {\n    let { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+page - 1) * limit;\n    let defaultLimit = limit ? +limit : 10;\n    const total = (await this.resumeModel.find(filter)).length;\n    const pages = Math.ceil(total / defaultLimit);\n    const result = await this.resumeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .populate(population)\n      .select(projection as any)\n      .sort(sort as any)\n      .exec();\n\n    return {\n      meta: {\n        total,\n        pages,\n        current: +page,\n        pageSize: defaultLimit,\n      },\n      result: result,\n    };\n  }\n\n  findOne(id: number) {\n    return this.resumeModel.findById(id);\n  }\n\n  update(id: number, updateResumeDto: UpdateResumeDto, user: IUser) {\n    console.log('xx', id);\n    return this.resumeModel.updateOne(\n      { _id: id },\n      {\n        ...updateResumeDto,\n        $push: {\n          history: {\n            status: updateResumeDto.status,\n            updatedAt: new Date(),\n            updatedBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      },\n    );\n  }\n\n  async remove(id: number, user: IUser) {\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.resumeModel.softDelete({ _id: id });\n  }\n  async findByUser(user: IUser) {\n    return this.resumeModel\n      .find({ userId: user._id })\n      .sort('-createdAt')\n      .populate([\n        {\n          path: 'companyId',\n          select: { name: 1 },\n        },\n        {\n          path: 'jobId',\n          select: { name: 1 },\n        },\n      ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { User } from 'src/auth/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  async create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    const result = await this.rolesService.create(createRoleDto, user);\n    return {\n      _id: result._id,\n      createdAt: result.createdAt,\n    };\n  }\n\n  @Get()\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs,\n  ) {\n    return this.rolesService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: number,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: IUser,\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { role, roleSchema } from './schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: role.name, schema: roleSchema }]),\n  ],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current, pageSize, qs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { role as roleM, roleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport { mongo } from 'mongoose';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(roleM.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    let nameCheck = await this.roleModel.findOne({\n      name: createRoleDto.name,\n    });\n    if (nameCheck) {\n      throw new UnauthorizedException('Role already exists');\n    }\n    return this.roleModel.create({\n      ...createRoleDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(current, pageSize, qs) {\n    let { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+current - 1) * pageSize;\n    let defaultLimit = pageSize ? +pageSize : 10;\n    let total = (await this.roleModel.find(filter)).length;\n    const pages = Math.ceil(total / defaultLimit);\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection)\n      .exec();\n\n    return {\n      meta: {\n        total,\n        pages,\n        current,\n        pageSize,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongo.ObjectId.isValid(id)) {\n      throw new UnauthorizedException('Invalid ID');\n    }\n    return (await this.roleModel.findById(id)).populate({\n      path: 'permissions',\n      select: { name: 1, _id: 1, apiPath: 1, method: 1, module: 1 },\n    });\n  }\n\n  async update(id: number, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongo.ObjectId.isValid(id)) {\n      throw new UnauthorizedException('Invalid ID');\n    }\n    // const nameCheck = await this.roleModel.findOne({\n    //   name: updateRoleDto.name,\n    // });\n    // if (nameCheck) {\n    //   throw new UnauthorizedException('Role already exists');\n    // }\n    return this.roleModel.updateOne(\n      { _id: id },\n      {\n        ...updateRoleDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: number, user: IUser) {\n    if (!mongo.ObjectId.isValid(id)) {\n      throw new UnauthorizedException('Invalid ID');\n    }\n    const role = await this.roleModel.findById(id);\n    if (!role) {\n      throw new UnauthorizedException('Role not found');\n    }\n\n    await this.roleModel.updateOne(\n      { _id: id },\n\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.roleModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@PublicPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSubscriberDto: UpdateSubscriberDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { PublicPermission, User } from 'src/auth/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  @PublicPermission()\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    console.log('user', user);\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Get()\n  findAll() {\n    return this.subscribersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n  ) {\n    return this.subscribersService.update(+id, updateSubscriberDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.subscribersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { subscribe } from 'diagnostics_channel';\nimport { subscriber, subscriberSchema } from './Schemas/subscriber.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: subscriber.name, schema: subscriberSchema },\n    ]),\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscribeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscribeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateSubscriberDto: UpdateSubscriberDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { subscriber, subscriberDocument } from './Schemas/subscriber.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(subscriber.name)\n    private subscribeModel: SoftDeleteModel,\n  ) {}\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    console.log('email', user);\n    let email = user.email;\n    return await this.subscribeModel.create({\n      email: email,\n      skills: createSubscriberDto.skills,\n    });\n  }\n\n  findAll() {\n    return `This action returns all subscribers`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} subscriber`;\n  }\n\n  update(id: number, updateSubscriberDto: UpdateSubscriberDto) {\n    return `This action updates a #${id} subscriber`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} subscriber`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/core/transform.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/core/transform.interceptor.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(\n            'response_message',\n            context.getHandler(),\n          ) || '',\n\n        data,\n        meta: {}, // if this is supposed to be the actual return then replace {} with data.result\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateResumeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  _id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty({message: 'Email is required'})@ApiProperty({example: 'aaa  '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty({message: 'Email is required'})@ApiProperty({example: 'aaa  '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\nimport { IsUnique } from 'src/auth/decorator/customize';\nexport class Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateUserDto {\n  // @IsUnique({ message: 'Email đã tồn tại' }) // Kiểm tra email duy nhất\n  @IsEmail({}, { message: 'Email is invalid' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  phone: number;\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string;\n\n  @IsNotEmpty({ message: 'gender is required' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'role is required' })\n  @IsMongoId({ message: 'role mustbe a mongoId' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  created_at: Date;\n  updated_at: Date;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty({ message: 'Email is required' })\n  @ApiProperty({ example: 'aaa  ' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty({ message: 'Email is required' })\n  @ApiProperty({ example: 'aaa  ' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(result: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(limit: number, page: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { LocalAuthGuard } from 'src/auth/passport/local-auth.guard';\nimport { Public, User } from 'src/auth/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  async create(@Body() result: CreateUserDto, @User() user: IUser) {\n    let info = await this.usersService.create(result, user);\n    return {\n      _id: info._id,\n      createdAt: info.createdAt,\n    };\n  }\n\n  @Get()\n  async findAll(\n    @Query('pageSize') limit: number,\n    @Query('current') page: number,\n    @Query() qs: string,\n  ) {\n    console.log('result', limit, page, qs);\n    let result = await this.usersService.findAll(+limit, +page, qs);\n    return result;\n  }\n\n  @Get(':id')\n  @Public()\n  async findOne(@Param('id') id: string) {\n    let result: any = await this.usersService.findOne(id);\n    let { password, ...user } = result._doc;\n    return user;\n  }\n\n  @Patch()\n  async update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    console.log('result', updateUserDto);\n    let result = await this.usersService.update(updateUserDto, user);\n    return result;\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { user, userSchema } from './schemas/user.schema';\nimport { role, roleSchema } from 'src/roles/schemas/role.schema';\nimport { ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: user.name, schema: userSchema }]),\n    MongooseModule.forFeature([{ name: role.name, schema: roleSchema }]),\n    ThrottlerModule.forRoot({\n      throttlers: [\n        {\n          ttl: 60000,\n          limit: 5,\n        },\n      ],\n    }),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findUserByRefeshToken\n                            \n                            \n                                getHashedPassword\n                            \n                            \n                                isValidatePassword\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateUserRefeshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(result: CreateUserDto, user?: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(limit, page, qs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByRefeshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByRefeshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashedPassword\n                        \n                    \n                \n            \n            \n                \ngetHashedPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidatePassword\n                        \n                    \n                \n            \n            \n                \nisValidatePassword(password: string, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserRefeshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserRefeshToken(id: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { user as userM, userDocument } from './schemas/user.schema';\nimport mongoose, { Model } from 'mongoose';\nimport * as bcrypt from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport { IUser } from './users.interface';\nimport { permission } from 'src/permissions/schemas/permission.schema';\nimport { role, roleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(userM.name) private userModel: SoftDeleteModel,\n    @InjectModel(role.name) private roleModel: SoftDeleteModel,\n  ) {}\n  getHashedPassword(password: string) {\n    const salt = bcrypt.genSaltSync(10);\n    const hash = bcrypt.hashSync(password, salt);\n    return hash;\n  }\n  async create(result: CreateUserDto, user?: IUser) {\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n    let checkUser = await this.userModel\n      .findOne({ email: result.email })\n      .exec();\n    let reuslt;\n    if (checkUser) {\n      throw new BadRequestException('Email already exists');\n    } else {\n      if (user) {\n        console.log('user', user);\n        const hashedPassword = this.getHashedPassword(result.password);\n        let password = hashedPassword;\n        reuslt = this.userModel.create({\n          email: result.email,\n          password: password,\n          name: result.name,\n          phone: result.phone,\n          age: result.age,\n          address: result.address,\n          created_at: result.created_at,\n          updated_at: result.updated_at,\n          gender: result.gender,\n          role: userRole?._id,\n          company: {\n            _id: result.company._id,\n            name: result.company.name,\n          },\n          createdBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        });\n        return reuslt;\n      } else {\n        const hashedPassword = this.getHashedPassword(result.password);\n        let password = hashedPassword;\n        reuslt = await this.userModel.create({\n          email: result.email,\n          password: password,\n          name: result.name,\n          phone: result.phone,\n          age: result.age,\n          address: result.address,\n          created_at: result.created_at,\n          updated_at: result.updated_at,\n          gender: result.gender,\n          role: userRole?._id,\n        });\n        return reuslt;\n      }\n    }\n  }\n\n  async findAll(limit, page, qs) {\n    let { filter, projection, population } = aqp(qs);\n    console.log('filter', filter);\n    let { sort } = aqp(qs);\n    delete filter.pageSize;\n    delete filter.current;\n    let offset = (+page - 1) * limit;\n    let defaultLimit = limit ? +limit : 10;\n    const total = (await this.userModel.find(filter)).length;\n    const pages = Math.ceil(total / defaultLimit);\n\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .select('-password')\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection)\n      .exec();\n    return {\n      meta: {\n        total,\n        pages,\n        current: page,\n        pageSize: limit,\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new UnauthorizedException('not Found user');\n    }\n    let user = this.userModel\n      .findOne({ _id: id })\n      .select('-password')\n      .populate({ path: 'role', select: { name: 1, _id: 1 } });\n\n    return user;\n  }\n\n  async findByEmail(email: string) {\n    return await this.userModel\n      .findOne({ email: email })\n      .populate({ path: 'role', select: { name: 1 } });\n  }\n  isValidatePassword(password: string, hashedPassword: string) {\n    return bcrypt.compareSync(password, hashedPassword);\n  }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(updateUserDto._id)) {\n      throw new BadRequestException('not update user');\n    }\n    return await this.userModel.updateOne(\n      { _id: updateUserDto._id },\n      {\n        email: updateUserDto.email,\n        password: updateUserDto.password,\n        name: updateUserDto.name,\n        phone: updateUserDto.phone,\n        age: updateUserDto.age,\n        address: updateUserDto.address,\n        company: {\n          _id: updateUserDto.company._id,\n          name: updateUserDto.company.name,\n        },\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: any) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('not remove user');\n    }\n    const foundUser = await this.userModel.findById({\n      _id: id,\n    });\n    if (foundUser.name === 'admin') {\n      throw new BadRequestException('Can not delete admin');\n    }\n\n    await this.userModel.updateOne(\n      {\n        _id: id,\n      },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return await this.userModel.softDelete({ _id: id });\n  }\n  async updateUserRefeshToken(id: string, refreshToken: string) {\n    return await this.userModel.updateOne(\n      { _id: id },\n      {\n        refreshToken: refreshToken,\n      },\n    );\n  }\n  async findUserByRefeshToken(refreshToken: string) {\n    return await this.userModel\n      .findOne({ refreshToken: refreshToken })\n      .populate({ path: 'role', select: { name: 1 } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/decorator/customize.ts\n            \n            function\n            IsUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/customize.ts\n            \n            variable\n            IS_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/customize.ts\n            \n            variable\n            PublicPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/passport/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            jobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            jobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            variable\n            permissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            type alias\n            permissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            resumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            resumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            variable\n            roleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            type alias\n            roleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/Schemas/subscriber.schema.ts\n            \n            class\n            subscriber\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/subscribers/Schemas/subscriber.schema.ts\n            \n            variable\n            subscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/Schemas/subscriber.schema.ts\n            \n            type alias\n            subscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            user\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            userSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            userDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : 2.3.1\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^1.2.2\n        \n            @nestjs/mongoose : 9.2.2\n        \n            @nestjs/passport : 9.0.3\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.0.4\n        \n            @nestjs/throttler : ^6.4.0\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            cookie-parser : ^1.4.7\n        \n            ejs : 3.1.9\n        \n            handlebars : 4.7.7\n        \n            helmet : ^8.0.0\n        \n            mongoose : 7.6.1\n        \n            ms : ^2.1.3\n        \n            multer : ^1.4.5-lts.1\n        \n            nodemailer : 6.9.3\n        \n            passport : 0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IsUnique   (src/.../customize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/auth/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsUnique\n                        \n                    \n                \n            \n            \n                \nIsUnique(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCác bước cần làm để chạy dự án NestJS\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n=================\nTác giả: Hỏi Dân IT\nMọi thông tin về Tác giả Hỏi Dân IT, các bạn có thể tìm kiếm tại đây:\nWebsite chính thức: https://hoidanit.com.vn/\nYoutube “Hỏi Dân IT” : https://www.youtube.com/@hoidanit\nTiktok “Hỏi Dân IT” :  https://www.tiktok.com/@hoidanit\nFanpage “Hỏi Dân IT” : https://www.facebook.com/askITwithERIC/\nUdemy Hỏi Dân IT: https://www.udemy.com/user/eric-7039/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/job.html":{"url":"classes/job.html","title":"class - job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type jobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class job {\n  @Prop()\n  name: string;\n  @Prop()\n  skills: string[];\n  @Prop()\n  location: string;\n  @Prop()\n  salary: number;\n  @Prop()\n  quantity: number;\n  @Prop()\n  level: string;\n  @Prop()\n  description: string;\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n  @Prop()\n  startDate: Date;\n  @Prop()\n  endDate: Date;\n  @Prop()\n  isActive: boolean;\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const jobSchema = SchemaFactory.createForClass(job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_exports\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nResumesService \n\nResumesService \n\nResumesService  -->\n\nResumesModule->ResumesService \n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    28 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/permission.html":{"url":"classes/permission.html","title":"class - permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { job } from 'src/jobs/schemas/job.schema';\n\nexport type permissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const permissionSchema = SchemaFactory.createForClass(permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : https://hoidanit.com.vn/\n        \n            License : UNLICENSED\n        \n            Author : Hỏi Dân IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/resume.html":{"url":"classes/resume.html","title":"class - resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { job } from 'src/jobs/schemas/job.schema';\n\nexport type resumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class resume {\n  @Prop()\n  email: string;\n\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: job.name })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updatedAt: Date;\n    updatedBy: {\n      _id: mongoose.Schema.Types.ObjectId;\n      email: string;\n    };\n  }[];\n\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const resumeSchema = SchemaFactory.createForClass(resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/role.html":{"url":"classes/role.html","title":"class - role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { job } from 'src/jobs/schemas/job.schema';\nimport { permission } from 'src/permissions/schemas/permission.schema';\n\nexport type roleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({\n    type: [mongoose.Schema.Types.ObjectId],\n    ref: permission.name,\n  })\n  permissions: permission[];\n\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const roleSchema = SchemaFactory.createForClass(role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/subscriber.html":{"url":"classes/subscriber.html","title":"class - subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/Schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/Schemas/subscriber.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { role } from 'src/roles/schemas/role.schema';\n\nexport type subscriberDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class subscriber {\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @Prop({ required: true })\n  skills: string[];\n\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const subscriberSchema = SchemaFactory.createForClass(subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            jobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            permissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            resumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            roleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            subscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            userDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    jobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    permissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    resumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    roleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/Schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    subscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    userDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/user.html":{"url":"classes/user.html","title":"class - user","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  user\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { role } from 'src/roles/schemas/role.schema';\n\nexport type userDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class user {\n  @Prop({ required: true, unique: true })\n  email: string;\n  @Prop({ required: true })\n  password: string;\n  @Prop()\n  name: string;\n  @Prop()\n  phone: number;\n  @Prop()\n  age: number;\n  @Prop()\n  address: string;\n  @Prop()\n  gender: string;\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: role.name })\n  role: mongoose.Schema.Types.ObjectId;\n  @Prop()\n  refreshToken: string;\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n  };\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const userSchema = SchemaFactory.createForClass(user);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            jobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            permissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            PublicPermission   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            resumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            roleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            subscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            userSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b567',\n    name: 'Create a User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:00:01.123Z',\n    updatedAt: '2025-03-04T08:00:01.123Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b568',\n    name: 'fetch user by id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:01:02.234Z',\n    updatedAt: '2025-03-04T08:01:02.234Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b569',\n    name: 'fetch user with paginate',\n    apiPath: 'api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:02:03.345Z',\n    updatedAt: '2025-03-04T08:02:03.345Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b56a',\n    name: 'update User',\n    apiPath: '/api/v1/users',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:03:04.456Z',\n    updatedAt: '2025-03-04T08:03:04.456Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b56b',\n    name: 'delete user',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:04:05.567Z',\n    updatedAt: '2025-03-04T08:04:05.567Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b56c',\n    name: 'Create Job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:05:06.678Z',\n    updatedAt: '2025-03-04T08:05:06.678Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b56d',\n    name: 'Update a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:06:07.789Z',\n    updatedAt: '2025-03-04T08:06:07.789Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b56e',\n    name: 'Deleta a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:07:08.890Z',\n    updatedAt: '2025-03-04T08:07:08.890Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b56f',\n    name: 'Fetch A job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:08:09.901Z',\n    updatedAt: '2025-03-04T08:08:09.901Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b570',\n    name: 'Fetch Jobs with pagination',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:09:10.012Z',\n    updatedAt: '2025-03-04T08:09:10.012Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b571',\n    name: 'Create a Company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:10:11.123Z',\n    updatedAt: '2025-03-04T08:10:11.123Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b572',\n    name: 'fetch company with paginate',\n    apiPath: 'api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:11:12.234Z',\n    updatedAt: '2025-03-04T08:11:12.234Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b573',\n    name: 'update Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:12:13.345Z',\n    updatedAt: '2025-03-04T08:12:13.345Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b574',\n    name: 'delete A company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:13:14.456Z',\n    updatedAt: '2025-03-04T08:13:14.456Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b575',\n    name: 'get Company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:14:15.567Z',\n    updatedAt: '2025-03-04T08:14:15.567Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b576',\n    name: 'Upload File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:15:16.678Z',\n    updatedAt: '2025-03-04T08:15:16.678Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b577',\n    name: 'Create Resume job',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:16:17.789Z',\n    updatedAt: '2025-03-04T08:16:17.789Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b578',\n    name: 'Fetch All Resume with page',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:17:18.890Z',\n    updatedAt: '2025-03-04T08:17:18.890Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b579',\n    name: 'Fetch Resume By Id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:18:19.901Z',\n    updatedAt: '2025-03-04T08:18:19.901Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b57a',\n    name: 'Update a Resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:19:20.012Z',\n    updatedAt: '2025-03-04T08:19:20.012Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b57b',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:20:21.123Z',\n    updatedAt: '2025-03-04T08:20:21.123Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b57c',\n    name: 'Get CV By User',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:21:22.234Z',\n    updatedAt: '2025-03-04T08:21:22.234Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b57d',\n    name: 'Create a Permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:22:23.345Z',\n    updatedAt: '2025-03-04T08:22:23.345Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b57e',\n    name: 'Fetch All Permission with page',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:23:24.456Z',\n    updatedAt: '2025-03-04T08:23:24.456Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b57f',\n    name: 'Fetch Permission By Id',\n    apiPath: 'api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:24:25.567Z',\n    updatedAt: '2025-03-04T08:24:25.567Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b580',\n    name: 'Update a Permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:25:26.678Z',\n    updatedAt: '2025-03-04T08:25:26.678Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b581',\n    name: 'Delete a Permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:26:27.789Z',\n    updatedAt: '2025-03-04T08:26:27.789Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b582',\n    name: 'Create a Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:27:28.890Z',\n    updatedAt: '2025-03-04T08:27:28.890Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b583',\n    name: 'Fetch All role with page',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:28:29.901Z',\n    updatedAt: '2025-03-04T08:28:29.901Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b584',\n    name: 'Fetch Permission By Id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:29:30.012Z',\n    updatedAt: '2025-03-04T08:29:30.012Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b585',\n    name: 'Update a Permission',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:30:31.123Z',\n    updatedAt: '2025-03-04T08:30:31.123Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8d2e4b7c3a9f1e2d4b586',\n    name: 'Delete a Permission',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:31:32.234Z',\n    updatedAt: '2025-03-04T08:31:32.234Z',\n    __v: 0,\n  },\n  {\n    _id: '65f8e9a2b7c3a9f1e2d4b592',\n    name: 'Get Account',\n    apiPath: '/api/v1/auth/account',\n    method: 'GET',\n    module: 'AUTH',\n    createdBy: {\n      _id: '647b5188a8a243e8191855b5',\n      email: 'noidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-03-04T08:31:32.234Z',\n    updatedAt: '2025-03-04T08:31:32.234Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PublicPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        permissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/Schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        subscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(user)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
